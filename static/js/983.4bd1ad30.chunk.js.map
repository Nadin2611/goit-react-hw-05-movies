{"version":3,"file":"static/js/983.4bd1ad30.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","components/MovieVideo/MovieVideo.styled.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","service/api.js","service/defaultImages.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  width: 250px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 18px;\n  color: white;\n  text-decoration: none;\n`;\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieRating = styled.div`\n  background-color: blue;\n  width: 40px;\n  height: 40px;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: -16px;\n  left: 10px;\n`;\n\nexport const MovieWrapper = styled.div`\n  position: relative;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const MovieYear = styled.p`\n  font-size: 14px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport {\n  Container,\n  List,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieRating,\n  MovieWrapper,\n  MovieInfoWrapper,\n  MovieTitle,\n  MovieYear,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {movies.map(\n          ({ id, name, title, release_date, poster_path, vote_average }) => {\n            if (!release_date) {\n              return null;\n            }\n            const year = new Date(release_date).getFullYear();\n            const vote = (vote_average * 10).toFixed();\n            const imageURL = `${BASE_URL}${poster_path}`;\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieWrapper>\n                    <MovieImage\n                      src={poster_path ? imageURL : defaultImageMovie}\n                      alt=\"movie-foto\"\n                      width=\"250\"\n                      height=\"380\"\n                    />\n\n                    <MovieRating>{vote}%</MovieRating>\n                  </MovieWrapper>\n                  <MovieInfoWrapper>\n                    <MovieTitle> {title ?? name}</MovieTitle>\n                    <MovieYear>({year})</MovieYear>\n                  </MovieInfoWrapper>\n                </MovieLink>\n              </MovieItem>\n            );\n          }\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport getMovies from 'service/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const trendingData = await getMovies('trending/movie/week');\n\n        setTrendingMovies(trendingData.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error.message);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <div>\n        <MoviesList movies={trendingMovies} />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const StyledMovieVideo = styled.div`\n  iframe {\n    width: 560px;\n    height: 315px;\n    margin-top: 30px;\n    border: 0;\n  }\n`;\n","import { StyledMovieVideo } from './MovieVideo.styled';\n\nconst MovieVideo = ({ name, videoKey }) => {\n  return (\n    <StyledMovieVideo>\n      <iframe\n        title={name}\n        src={`https://www.youtube.com/embed/${videoKey}`}\n        allowFullScreen\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n    </StyledMovieVideo>\n  );\n};\n\nexport default MovieVideo;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 350px;\n  height: 520px;\n\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n  DescriptionWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  videos,\n  firstOfficialTrailer,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n      </Wrapper>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <DescriptionWrapper>\n        {' '}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n        {firstOfficialTrailer && (\n          <MovieVideo\n            name={firstOfficialTrailer.name}\n            type={firstOfficialTrailer.type}\n            official={firstOfficialTrailer.official}\n            videoKey={firstOfficialTrailer.key}\n          />\n        )}\n      </DescriptionWrapper>\n\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const findFirstOfficialTrailer = videos => {\n    return videos?.find(\n      video => video.type === 'Trailer' && video.official === true\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const filteredVideos = findFirstOfficialTrailer(videos);\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          firstOfficialTrailer={filteredVideos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaultImageMovie\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaultImageMovie\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n","export const defaultImageMovie =\n  'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\nexport const defaultImageActor =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","_Fragment","_jsxs","GoArrowLeft","Container","List","_templateObject2","MovieItem","_templateObject3","MovieLink","_templateObject4","MovieImage","_templateObject5","MovieRating","_templateObject6","MovieWrapper","_templateObject7","MovieTitle","_templateObject8","MovieYear","_templateObject9","MovieInfoWrapper","_templateObject10","movies","location","useLocation","map","_ref2","id","name","title","release_date","poster_path","vote_average","year","Date","getFullYear","vote","toFixed","imageURL","concat","BASE_URL","state","from","src","defaultImageMovie","alt","width","height","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","useEffect","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","trendingData","_context","prev","next","getMovies","sent","results","t0","console","error","message","stop","apply","arguments","MoviesList","StyledMovieVideo","videoKey","allowFullScreen","frameBorder","allow","Title","Wrapper","props","background","Image","DescriptionContainer","DescriptionWrapper","UserScoreWrapper","UserScore","UserScoreValue","Overview","OverviewText","_templateObject11","GenresWrapper","_templateObject12","GenresTitle","_templateObject13","Genres","_templateObject14","InfoContainer","_templateObject15","AdditionalInfo","_templateObject16","_templateObject17","ListItem","_templateObject18","_templateObject19","backdrop_path","overview","genres","firstOfficialTrailer","videos","length","genre","MovieVideo","type","official","key","_location$state$from","_location$state","movieId","useParams","details","setDetails","_useState3","_useState4","setVideos","_useState5","_useState6","isLoading","setIsLoading","BackLinkLocationRef","useRef","fetchData","movieDetails","movieVideos","toast","finish","filteredVideos","find","video","findFirstOfficialTrailer","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","fallback","Outlet","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x","defaultImageActor"],"sourceRoot":""}