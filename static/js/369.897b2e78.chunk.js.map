{"version":3,"file":"static/js/369.897b2e78.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetailsPage.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: black;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 450px;\n  height: auto;\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 4px;\n  border-bottom: 1px solid black;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  &:hover {\n    color: red;\n  }\n`;\n","import {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  poster_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Title>\n        {title} {year && `(${year})`}\n      </Title>\n      <Wrapper>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n      </Wrapper>\n      <InfoContainer>\n        <AdditionalInfo>Additional information</AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  padding: 10px;\n  align-items: center;\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const defaulImage =\n    'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaulImage\n          }\n        />\n      )}\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Wrapper","_templateObject3","Image","_templateObject4","DescriptionContainer","_templateObject5","UserScoreWrapper","_templateObject6","UserScore","_templateObject7","UserScoreValue","_templateObject8","Overview","_templateObject9","OverviewText","_templateObject10","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","List","_templateObject16","ListItem","_templateObject17","StyledLink","Link","_templateObject18","_ref","title","poster_path","vote_average","overview","genres","release_date","year","Date","getFullYear","vote","toFixed","_jsxs","children","concat","_jsx","src","alt","width","height","length","map","genre","name","id","to","_Fragment","GoArrowLeft","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","BackLinkLocationRef","useRef","state","from","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","getMovies","sent","t0","toast","finish","stop","apply","arguments","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","Outlet","API_KEY","BASE_URL","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}