{"version":3,"file":"static/js/387.b0c54296.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const ReviewsList = styled.ul``;\n\nexport const ReviewsItem = styled.li``;\n\nexport const ReviewersName = styled.h2`\n  font-size: 20px;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.5;\n  font-size: 14px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Container,\n  ReviewsList,\n  ReviewsItem,\n  ReviewersName,\n  Review,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n\n        const fetchData = await getMovies(`movie/${movieId}/reviews`);\n\n        if (fetchData.results.length === 0) {\n          toast.warn('We don&#x27;t have any reviews for this movie.');\n        }\n\n        setReviews(fetchData.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (!movieId) {\n      return;\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n\n      {reviews && (\n        <ReviewsList>\n          {reviews.map(review => (\n            <ReviewsItem key={review.id}>\n              <ReviewersName>{review.author}</ReviewersName>\n              <Review>{review.content}</Review>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ReviewsList","_templateObject2","ReviewsItem","_templateObject3","ReviewersName","_templateObject4","Review","_templateObject5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","fetchData","_context","prev","next","getMovies","concat","sent","results","length","toast","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","review","author","content","id","API_KEY","BASE_URL","endpoint","params","response","_args","undefined","axios","_objectSpread","api_key","abrupt","data","_x"],"sourceRoot":""}