{"version":3,"file":"static/js/25.5cf59524.chunk.js","mappings":"mMAGaA,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0M,mBCWtC,EAXiB,SAAHC,GAA0B,IAApBC,EAAED,EAAFC,GAAIC,EAAQF,EAARE,SACtB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAF,UACEG,EAAAA,EAAAA,MAACV,EAAU,CAACM,GAAIA,EAAGC,SAAA,EACjBC,EAAAA,EAAAA,KAACG,EAAAA,IAAW,IACXJ,MAIT,C,sHCVaK,EAAgBX,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qGAO1BS,EAAOZ,EAAAA,GAAAA,KAAWa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kEAMlBW,EAAQd,EAAAA,GAAAA,MAAYe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uGAOpBa,EAAQhB,EAAAA,GAAAA,MAAYiB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6UAmBpBe,EAASlB,EAAAA,GAAAA,OAAamB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,sa,SCHnC,EAlCmB,WAAO,IAADiB,EACvBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,EAAkC,QAA7BP,EAAGK,EAAaG,IAAI,iBAAS,IAAAR,EAAAA,EAAI,GAa5C,OACEb,EAAAA,EAAAA,KAACI,EAAa,CAAAL,UACZC,EAAAA,EAAAA,KAACK,EAAI,CAACiB,SAbW,SAAAC,GACnBA,EAAMC,iBACN,IAAMJ,EAAQG,EAAME,OAAOC,OAAOC,MAAMC,OAAOC,cAC/C,IAAKT,EACH,OAAOU,EAAAA,GAAAA,KAAW,sBAElBX,EAAgB,CAAEO,OAAQN,IAC1BG,EAAME,OAAOM,OAEjB,EAIiChC,UAC3BG,EAAAA,EAAAA,MAACK,EAAK,CAAAR,SAAA,EACJC,EAAAA,EAAAA,KAACS,EAAK,CACJuB,KAAK,OACLC,KAAK,SACLC,aAAcd,EACde,YAAY,2BACZC,aAAa,SAEfpC,EAAAA,EAAAA,KAACW,EAAM,CAACqB,KAAK,SAAQjC,SAAC,iBAKhC,C,wNCjCasC,EAAY5C,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6CAKtB0C,EAAO7C,EAAAA,GAAAA,GAASa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,yGAQhB2C,EAAY9C,EAAAA,GAAAA,GAASe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,mLAWrB4C,GAAY/C,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYiB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,yEAKxB6C,EAAahD,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kCAIvB8C,EAAejD,EAAAA,GAAAA,IAAUkD,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,iCAIzBgD,EAAYnD,EAAAA,GAAAA,EAAQoD,IAAAA,GAAAjD,EAAAA,EAAAA,GAAA,mHAQpBkD,EAAmBrD,EAAAA,GAAAA,IAAUsD,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,qE,SCH1C,EA/BkB,SAAHC,GAAqB,IAAfmD,EAAOnD,EAAPmD,QACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACElD,EAAAA,EAAAA,KAACqC,EAAS,CAAAtC,UACRC,EAAAA,EAAAA,KAACsC,EAAI,CAAAvC,SACFiD,EAAQG,KAAI,SAAAC,GAAiC,IAA9BC,EAAED,EAAFC,GAAIpB,EAAImB,EAAJnB,KAAMqB,EAAYF,EAAZE,aAClBC,EAAQ,GAAAC,OAAMC,EAAAA,UAAQD,OAAGF,GAC/B,OACEtD,EAAAA,EAAAA,KAACuC,EAAS,CAAAxC,UACRG,EAAAA,EAAAA,MAACsC,EAAS,CAAC1C,GAAE,WAAA0D,OAAaH,GAAMK,MAAO,CAAEC,KAAMV,GAAWlD,SAAA,EACxDC,EAAAA,EAAAA,KAAC0C,EAAY,CAAA3C,UACXC,EAAAA,EAAAA,KAACyC,EAAU,CACTmB,IAAKN,EAAeC,EAAWM,EAAAA,EAC/BC,IAAI,aACJC,MAAM,MACNC,OAAO,WAGXhE,EAAAA,EAAAA,KAAC8C,EAAgB,CAAA/C,UACfG,EAAAA,EAAAA,MAAC0C,EAAS,CAAA7C,SAAA,CAAC,IAAEkC,WAXHoB,EAgBpB,OAIR,E,oBCoCA,EAtEkB,WAAO,IAADxC,EACtBC,GAAuBC,EAAAA,EAAAA,MAAhBG,GAAiCD,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACnBmD,GAA8CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAlD,EAAAA,EAAAA,GAAAgD,EAAA,GAAnDG,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAA0CJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAtD,EAAAA,EAAAA,GAAAqD,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAA1D,EAAAA,EAAAA,GAAAyD,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBvD,EAAkC,QAA7BP,EAAGK,EAAaG,IAAI,iBAAS,IAAAR,EAAAA,EAAI,IAE5CiE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,eAAAlF,GAAAmF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEEC,EAAAA,EAAAA,GAAU,kBAAkB,KAAD,EAA9CJ,EAAUC,EAAAI,KAEhBf,EAAiBU,EAAWM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAErCO,QAAQC,MAAM,iCAAkCR,EAAAM,GAAMG,SAAS,yBAAAT,EAAAU,OAAA,GAAAZ,EAAA,kBAElE,kBARuB,OAAArF,EAAAkG,MAAA,KAAAC,UAAA,KASxBjB,GACF,GAAG,IAEH,IAAMkB,GAAuBC,EAAAA,EAAAA,cAAWlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAkB,IAAA,IAAAC,EAAA,OAAAnB,IAAAA,MAAA,SAAAoB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAElB,OAFkBe,EAAAhB,KAAA,EAErCR,GAAa,GAAMwB,EAAAf,KAAA,GACMC,EAAAA,EAAAA,GAAU,gBAAiB,CAAEnE,MAAAA,IAAS,KAAD,EAE5B,KAF5BgF,EAAUC,EAAAb,MAEDC,QAAQa,OACrBxE,EAAAA,GAAAA,KACE,4EAGFA,EAAAA,GAAAA,KAAW,SAAD0B,OACC4C,EAAWX,QAAQa,OAAM,KAAA9C,OACF,IAA9B4C,EAAWX,QAAQa,OAAe,SAAW,UAAS,MAK5DjC,EAAmB+B,EAAWX,SAC9BZ,GAAa,GAAOwB,EAAAf,KAAA,iBAAAe,EAAAhB,KAAA,GAAAgB,EAAAX,GAAAW,EAAA,SAEpBvE,EAAAA,GAAAA,MAAY,2BAA2B,QAEnB,OAFmBuE,EAAAhB,KAAA,GAEvCR,GAAa,GAAOwB,EAAAE,OAAA,6BAAAF,EAAAP,OAAA,GAAAK,EAAA,yBAErB,CAAC/E,IAOJ,OALA0D,EAAAA,EAAAA,YAAU,WACH1D,GACL6E,GACF,GAAG,CAACA,EAAsB7E,KAGxBlB,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAF,SAAA,EACEC,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,IACV5B,IAAa5E,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,IAEpBrC,EAAgBkC,OAAS,IAAKtG,EAAAA,EAAAA,KAAC0G,EAAS,CAAC1D,QAASoB,IACxC,KAAVhD,IACClB,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAF,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC0G,EAAS,CAAC1D,QAASwB,WAMhC,C,gRC3EamC,EAAmBlH,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yG,SCc1C,EAdmB,SAAHC,GAA4B,IAAtBoC,EAAIpC,EAAJoC,KAAM2E,EAAQ/G,EAAR+G,SAC1B,OACE5G,EAAAA,EAAAA,KAAC2G,EAAgB,CAAA5G,UACfC,EAAAA,EAAAA,KAAA,UACE6G,MAAO5E,EACP2B,IAAG,iCAAAJ,OAAmCoD,GACtCE,iBAAe,EACfC,YAAY,IACZC,MAAM,8FAId,E,UCVa3E,EAAY5C,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gDAKtBqH,EAAQxH,EAAAA,GAAAA,GAASa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mGAOjBsH,EAAUzH,EAAAA,GAAAA,IAAUe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+RAU3B,SAAAuH,GAAK,OAAKA,EAAMC,WAAU,OAAA5D,OAAU2D,EAAMC,WAAU,KAAM,MAAM,IAKzDC,EAAQ5H,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,uEAOlB0H,EAAuB7H,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,gGAOjC2H,EAAqB9H,EAAAA,GAAAA,IAAUkD,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,qFAO/B4H,EAAmB/H,EAAAA,GAAAA,IAAUoD,IAAAA,GAAAjD,EAAAA,EAAAA,GAAA,+DAM7B6H,EAAYhI,EAAAA,GAAAA,EAAQsD,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,gCAIpB8H,EAAiBjI,EAAAA,GAAAA,EAAQkI,IAAAA,GAAA/H,EAAAA,EAAAA,GAAA,QAEzBgI,EAAWnI,EAAAA,GAAAA,EAAQoI,IAAAA,GAAAjI,EAAAA,EAAAA,GAAA,uDAKnBkI,EAAerI,EAAAA,GAAAA,EAAQsI,IAAAA,GAAAnI,EAAAA,EAAAA,GAAA,qDAKvBoI,EAAgBvI,EAAAA,GAAAA,IAAUwI,IAAAA,GAAArI,EAAAA,EAAAA,GAAA,QAE1BsI,EAAczI,EAAAA,GAAAA,GAAS0I,IAAAA,GAAAvI,EAAAA,EAAAA,GAAA,yEAMvBwI,EAAS3I,EAAAA,GAAAA,GAAS4I,IAAAA,GAAAzI,EAAAA,EAAAA,GAAA,mJAUlB0I,GAAgB7I,EAAAA,GAAAA,IAAU8I,IAAAA,GAAA3I,EAAAA,EAAAA,GAAA,yHAO1B4I,GAAiB/I,EAAAA,GAAAA,EAAQgJ,IAAAA,GAAA7I,EAAAA,EAAAA,GAAA,qDAKzB0C,GAAO7C,EAAAA,GAAAA,GAASiJ,IAAAA,GAAA9I,EAAAA,EAAAA,GAAA,mHAQhB+I,GAAWlJ,EAAAA,GAAAA,GAASmJ,IAAAA,GAAAhJ,EAAAA,EAAAA,GAAA,sDAKpBJ,IAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYoJ,IAAAA,GAAAjJ,EAAAA,EAAAA,GAAA,mVCnBtC,GA3EkB,SAAHC,GAWR,IAVLgH,EAAKhH,EAALgH,MACA5E,EAAIpC,EAAJoC,KACA6G,EAAWjJ,EAAXiJ,YACAC,EAAalJ,EAAbkJ,cACAC,EAAYnJ,EAAZmJ,aACAC,EAAQpJ,EAARoJ,SACAC,EAAMrJ,EAANqJ,OACAC,EAAYtJ,EAAZsJ,aAEAC,GADMvJ,EAANwJ,OACoBxJ,EAApBuJ,sBAEIE,EAAO,GACPH,IAEFG,EADa,IAAIC,KAAKJ,GACVK,eAGd,IAAMC,GAAuB,GAAfT,GAAmBU,UAEjC,OACExJ,EAAAA,EAAAA,MAACmC,EAAS,CAAAtC,SAAA,EACRC,EAAAA,EAAAA,KAACkH,EAAO,CAACE,WAAY2B,EAAchJ,SAChC+I,IACC9I,EAAAA,EAAAA,KAACqH,EAAK,CAACzD,IAAKkF,EAAahF,IAAI,aAAaC,MAAM,MAAMC,OAAO,WAGjE9D,EAAAA,EAAAA,MAAC+G,EAAK,CAAAlH,SAAA,CACE,OAAL8G,QAAK,IAALA,EAAAA,EAAS5E,EAAK,IAAEqH,GAAI,IAAA9F,OAAQ8F,EAAI,SAEnCpJ,EAAAA,EAAAA,MAACqH,EAAkB,CAAAxH,SAAA,CAChB,KACDG,EAAAA,EAAAA,MAACoH,EAAoB,CAAAvH,SAAA,EACnBG,EAAAA,EAAAA,MAACsH,EAAgB,CAAAzH,SAAA,EACfC,EAAAA,EAAAA,KAACyH,EAAS,CAAA1H,SAAC,kBACXG,EAAAA,EAAAA,MAACwH,EAAc,CAAA3H,SAAA,CAAE0J,EAAK,WAExBzJ,EAAAA,EAAAA,KAAC4H,EAAQ,CAAA7H,SAAC,gBACVC,EAAAA,EAAAA,KAAC8H,EAAY,CAAA/H,SAAEkJ,KACf/I,EAAAA,EAAAA,MAAC8H,EAAa,CAAAjI,SAAA,EACZC,EAAAA,EAAAA,KAACkI,EAAW,CAAAnI,SAAC,YACZmJ,GAAUA,EAAO5C,OAAS,IACzBtG,EAAAA,EAAAA,KAACoI,EAAM,CAAArI,SACJmJ,EAAO/F,KAAI,SAAAwG,GAAK,OACf3J,EAAAA,EAAAA,KAAA,MAAAD,SAAoB4J,EAAM1H,MAAjB0H,EAAMtG,GAAqB,YAM7C+F,IACCpJ,EAAAA,EAAAA,KAAC4J,EAAU,CACT3H,KAAMmH,EAAqBnH,KAC3BD,KAAMoH,EAAqBpH,KAC3B6H,SAAUT,EAAqBS,SAC/BjD,SAAUwC,EAAqBU,UAKrC5J,EAAAA,EAAAA,MAACoI,GAAa,CAAAvI,SAAA,EACZC,EAAAA,EAAAA,KAACwI,GAAc,KACftI,EAAAA,EAAAA,MAACoC,GAAI,CAAAvC,SAAA,EACHC,EAAAA,EAAAA,KAAC2I,GAAQ,CAAA5I,UACPC,EAAAA,EAAAA,KAACR,GAAU,CAACM,GAAG,OAAMC,SAAC,YAExBC,EAAAA,EAAAA,KAAC2I,GAAQ,CAAA5I,UACPC,EAAAA,EAAAA,KAACR,GAAU,CAACM,GAAG,UAASC,SAAC,sBAMrC,E,WCtFa0D,GAAW,kCAqExB,GAnEyB,WAAO,IAADsG,EAAAC,EACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACRhG,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAlD,EAAAA,EAAAA,GAAAgD,EAAA,GAArCkG,EAAOhG,EAAA,GAAEiG,EAAUjG,EAAA,GAC1BG,GAA4BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAtD,EAAAA,EAAAA,GAAAqD,EAAA,GAAnC+E,EAAM9E,EAAA,GAAE8F,EAAS9F,EAAA,GACxBG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAA1D,EAAAA,EAAAA,GAAAyD,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxB1B,GAAWC,EAAAA,EAAAA,MACXoH,GAAsBC,EAAAA,EAAAA,QAA2B,QAArBR,EAAe,QAAfC,EAAC/G,EAASS,aAAK,IAAAsG,OAAA,EAAdA,EAAgBrG,YAAI,IAAAoG,EAAAA,EAAI,MAQ3DjF,EAAAA,EAAAA,YAAU,WACR,IAAM0F,EAAS,eAAA3K,GAAAmF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAuF,EAAAC,EAAA,OAAAzF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEK,OAFLF,EAAAC,KAAA,EAEdR,GAAa,GAAMO,EAAAE,KAAA,GAEQC,EAAAA,EAAAA,GAAU,SAAD/B,OAAUyG,IAAW,KAAD,EAE/B,OAFnBQ,EAAYrF,EAAAI,KAElB4E,EAAWK,GAAcrF,EAAAE,KAAA,GAECC,EAAAA,EAAAA,GAAU,SAAD/B,OAAUyG,EAAO,YAAW,KAAD,EAAxDS,EAAWtF,EAAAI,KACjB6E,EAAUK,EAAYjF,SAASL,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAE/BtD,EAAAA,GAAAA,MAAY,2BAA2B,QAEnB,OAFmBsD,EAAAC,KAAA,GAEvCR,GAAa,GAAOO,EAAAmB,OAAA,6BAAAnB,EAAAU,OAAA,GAAAZ,EAAA,yBAEvB,kBAfc,OAAArF,EAAAkG,MAAA,KAAAC,UAAA,KAgBXiE,GACFO,GAEJ,GAAG,CAACP,IAEJ,IAAMU,EA5B2B,SAAAtB,GAC/B,OAAa,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQuB,MACb,SAAAC,GAAK,MAAmB,YAAfA,EAAM7I,OAAyC,IAAnB6I,EAAMhB,QAAiB,GAEhE,CAwBuBiB,CAAyBzB,GAEhD,OACEnJ,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEC,EAAAA,EAAAA,KAAC+K,GAAAA,EAAQ,CAACjL,GAAIwK,EAAoBU,QAAQjL,SAAC,YAC1C6E,IAAa5E,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,IACpB0D,IACCnK,EAAAA,EAAAA,KAACiL,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJf,GAAO,IACXd,OAAQA,EACRD,qBAAsBuB,EACtB7B,YACEqB,EAAQrB,YAAW,GAAAtF,OACZC,IAAQD,OAAG2G,EAAQrB,aACtBqC,EAAAA,EAENpC,cACEoB,EAAQpB,cAAa,GAAAvF,OACdC,IAAQD,OAAG2G,EAAQpB,eACtBoC,EAAAA,MAKVnL,EAAAA,EAAAA,KAACoL,EAAAA,SAAQ,CAACC,UAAUrL,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,IAAI1G,UAC7BC,EAAAA,EAAAA,KAACsL,EAAAA,GAAM,QAIf,C,4EC3EMC,EAAU,mCACH9H,EAAW,gCAElB8B,EAAS,eAAA1F,GAAAmF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOsG,GAAQ,IAAAC,EAAAC,EAAAC,EAAA3F,UAAA,OAAAf,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAa,OAAXmG,EAAME,EAAArF,OAAA,QAAAsF,IAAAD,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACvG,EAAAE,KAAA,EACrBuG,EAAAA,EAAAA,IAAU,GAADrI,OAAIC,GAAQD,OAAGgI,GAAY,CACzDC,QAAMP,EAAAA,EAAAA,GAAA,CACJY,QAASP,GACNE,KAEJ,KAAD,EALY,OAARC,EAAQtG,EAAAI,KAAAJ,EAAA2G,OAAA,SAMPL,EAASM,MAAI,wBAAA5G,EAAAU,OAAA,GAAAZ,EAAA,KACrB,gBARc+G,GAAA,OAAApM,EAAAkG,MAAA,KAAAC,UAAA,KAUf,K,8ECfO,IAAMmF,EACX,kHAEWtH,EACX,+E","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/ActorList/ActorList.styled.jsx","components/ActorList/ActorList.jsx","pages/ActorPage.jsx","components/MovieVideo/MovieVideo.styled.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","service/api.js","service/defaultImages.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  width: 600px;\n  color: white;\n  border-radius: 18px;\n  border: none;\n  font-size: 20px;\n  background-color: transparent;\n  border: 2px solid white;\n  transition: border-color 0.3s;\n\n  &:hover,\n  &:focus,\n  &:not(:placeholder-shown) {\n    font-size: 20px;\n    border-color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 20px;\n  text-decoration: none;\n  background-color: white;\n  color: blue;\n  font-weight: 500;\n  border: none;\n  position: absolute;\n  right: 1px;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { FormContainer, Form, Label, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('search') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.search.value.trim().toLowerCase();\n    if (!query) {\n      return toast.warn('Please enter text!');\n    } else {\n      setSearchParams({ search: query });\n      event.target.reset();\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            defaultValue={query}\n            placeholder=\"Enter movie to search...\"\n            autoComplete=\"off\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </Label>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const ActorItem = styled.li`\n  margin-bottom: 10px;\n  width: 250px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const ActorLink = styled(Link)`\n  font-size: 18px;\n  color: white;\n  text-decoration: none;\n`;\nexport const ActorImage = styled.img`\n  border-radius: 10px;\n`;\n\nexport const ActorWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const ActorInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport { defaultImageActor } from 'service/defaultImages';\nimport {\n  Container,\n  List,\n  ActorItem,\n  ActorLink,\n  ActorImage,\n  ActorWrapper,\n  ActorInfoWrapper,\n  ActorName,\n} from './ActorList.styled';\n\nconst ActorList = ({ persons }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {persons.map(({ id, name, profile_path }) => {\n          const imageURL = `${BASE_URL}${profile_path}`;\n          return (\n            <ActorItem key={id}>\n              <ActorLink to={`/person/${id}`} state={{ from: location }}>\n                <ActorWrapper>\n                  <ActorImage\n                    src={profile_path ? imageURL : defaultImageActor}\n                    alt=\"actor-foto\"\n                    width=\"250\"\n                    height=\"380\"\n                  />\n                </ActorWrapper>\n                <ActorInfoWrapper>\n                  <ActorName> {name}</ActorName>\n                </ActorInfoWrapper>\n              </ActorLink>\n            </ActorItem>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\n\nexport default ActorList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport ActorList from 'components/ActorList/ActorList';\nimport { Loader } from 'components/Loader/Loader';\nimport getMovies from 'service/api';\n\nconst ActorPage = () => {\n  const [searchParams] = useSearchParams();\n  const [actorsByKeyword, setActorsByKeyword] = useState([]);\n  const [popularActors, setPopularActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('search') ?? '';\n\n  useEffect(() => {\n    const fetchPopularActors = async () => {\n      try {\n        const personData = await getMovies('person/popular');\n\n        setPopularActors(personData.results);\n      } catch (error) {\n        console.error('Error fetching popular actors:', error.message);\n      }\n    };\n    fetchPopularActors();\n  }, []);\n\n  const fetchActorsByKeyword = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const actorsData = await getMovies('search/person', { query });\n\n      if (actorsData.results.length === 0) {\n        toast.warn(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      } else {\n        toast.info(\n          `Found ${actorsData.results.length} ${\n            actorsData.results.length === 1 ? 'person' : 'persons'\n          }.`\n        );\n      }\n\n      setActorsByKeyword(actorsData.results);\n      setIsLoading(false);\n    } catch (error) {\n      toast.error('Something went wrong!!!');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n    fetchActorsByKeyword();\n  }, [fetchActorsByKeyword, query]);\n\n  return (\n    <>\n      <SearchForm />\n      {isLoading && <Loader />}\n\n      {actorsByKeyword.length > 0 && <ActorList persons={actorsByKeyword} />}\n      {query === '' && (\n        <>\n          <h1>Popular actors</h1>\n          <div>\n            <ActorList persons={popularActors} />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ActorPage;\n","import styled from 'styled-components';\n\nexport const StyledMovieVideo = styled.div`\n  iframe {\n    width: 560px;\n    height: 315px;\n    margin-top: 30px;\n    border: 0;\n  }\n`;\n","import { StyledMovieVideo } from './MovieVideo.styled';\n\nconst MovieVideo = ({ name, videoKey }) => {\n  return (\n    <StyledMovieVideo>\n      <iframe\n        title={name}\n        src={`https://www.youtube.com/embed/${videoKey}`}\n        allowFullScreen\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n    </StyledMovieVideo>\n  );\n};\n\nexport default MovieVideo;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 350px;\n  height: 520px;\n\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n  DescriptionWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  videos,\n  firstOfficialTrailer,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n      </Wrapper>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <DescriptionWrapper>\n        {' '}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n        {firstOfficialTrailer && (\n          <MovieVideo\n            name={firstOfficialTrailer.name}\n            type={firstOfficialTrailer.type}\n            official={firstOfficialTrailer.official}\n            videoKey={firstOfficialTrailer.key}\n          />\n        )}\n      </DescriptionWrapper>\n\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const findFirstOfficialTrailer = videos => {\n    return videos?.find(\n      video => video.type === 'Trailer' && video.official === true\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const filteredVideos = findFirstOfficialTrailer(videos);\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          firstOfficialTrailer={filteredVideos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaultImageMovie\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaultImageMovie\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n","export const defaultImageMovie =\n  'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\nexport const defaultImageActor =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","_Fragment","_jsxs","GoArrowLeft","FormContainer","Form","_templateObject2","Label","_templateObject3","Input","_templateObject4","Button","_templateObject5","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","onSubmit","event","preventDefault","target","search","value","trim","toLowerCase","toast","reset","type","name","defaultValue","placeholder","autoComplete","Container","List","ActorItem","ActorLink","ActorImage","ActorWrapper","_templateObject6","ActorName","_templateObject7","ActorInfoWrapper","_templateObject8","persons","location","useLocation","map","_ref2","id","profile_path","imageURL","concat","BASE_URL","state","from","src","defaultImageActor","alt","width","height","_useState","useState","_useState2","actorsByKeyword","setActorsByKeyword","_useState3","_useState4","popularActors","setPopularActors","_useState5","_useState6","isLoading","setIsLoading","useEffect","fetchPopularActors","_asyncToGenerator","_regeneratorRuntime","_callee","personData","_context","prev","next","getMovies","sent","results","t0","console","error","message","stop","apply","arguments","fetchActorsByKeyword","useCallback","_callee2","actorsData","_context2","length","finish","SearchForm","Loader","ActorList","StyledMovieVideo","videoKey","title","allowFullScreen","frameBorder","allow","Title","Wrapper","props","background","Image","DescriptionContainer","DescriptionWrapper","UserScoreWrapper","UserScore","UserScoreValue","_templateObject9","Overview","_templateObject10","OverviewText","_templateObject11","GenresWrapper","_templateObject12","GenresTitle","_templateObject13","Genres","_templateObject14","InfoContainer","_templateObject15","AdditionalInfo","_templateObject16","_templateObject17","ListItem","_templateObject18","_templateObject19","poster_path","backdrop_path","vote_average","overview","genres","release_date","firstOfficialTrailer","videos","year","Date","getFullYear","vote","toFixed","genre","MovieVideo","official","key","_location$state$from","_location$state","movieId","useParams","details","setDetails","setVideos","BackLinkLocationRef","useRef","fetchData","movieDetails","movieVideos","filteredVideos","find","video","findFirstOfficialTrailer","BackLink","current","MovieInfo","_objectSpread","defaultImageMovie","Suspense","fallback","Outlet","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}