{"version":3,"file":"static/js/964.b2e14c2c.chunk.js","mappings":"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","sources":["components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetailsPage.jsx","service/api.js"],"sourcesContent":["const MovieVideo = ({ name, type, official, videoKey }) => {\n  return (\n    type === 'Trailer' &&\n    official === true && (\n      <div>\n        <iframe\n          title={name}\n          width=\"560\"\n          height=\"315\"\n          src={`https://www.youtube.com/embed/${videoKey}`}\n          allowFullScreen=\"true\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        ></iframe>\n      </div>\n    )\n  );\n};\n\nexport default MovieVideo;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 350px;\n  height: 520px;\n\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  videos,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n          {videos && videos.length > 0 && (\n            <div>\n              {videos.map(video => (\n                <MovieVideo\n                  key={video.id}\n                  name={video.name}\n                  type={video.type}\n                  official={video.official}\n                  videoKey={video.key}\n                />\n              ))}\n            </div>\n          )}\n        </DescriptionContainer>\n      </Wrapper>\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n\n        console.log(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  console.log(videos);\n  const defaulImage =\n    'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaulImage\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaulImage\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["_ref","name","type","official","videoKey","_jsx","children","title","width","height","src","concat","allowFullScreen","frameBorder","allow","Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Wrapper","_templateObject3","props","background","Image","_templateObject4","DescriptionContainer","_templateObject5","UserScoreWrapper","_templateObject6","UserScore","_templateObject7","UserScoreValue","_templateObject8","Overview","_templateObject9","OverviewText","_templateObject10","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","List","_templateObject16","ListItem","_templateObject17","StyledLink","Link","_templateObject18","poster_path","backdrop_path","vote_average","overview","genres","release_date","videos","year","Date","getFullYear","vote","toFixed","_jsxs","alt","length","map","genre","id","video","MovieVideo","key","to","_Fragment","GoArrowLeft","BASE_URL","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","setVideos","_useState5","_useState6","isLoading","setIsLoading","location","useLocation","BackLinkLocationRef","useRef","state","from","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","movieVideos","_context","prev","next","getMovies","sent","results","console","log","t0","toast","finish","stop","apply","arguments","defaulImage","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","fallback","Outlet","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}