{"version":3,"file":"static/js/983.b9e80788.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetailsPage.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  width: 250px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 18px;\n  color: white;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n  }\n`;\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieRating = styled.div`\n  background-color: blue;\n  width: 40px;\n  height: 40px;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: -16px;\n  left: 10px;\n`;\n\nexport const MovieWrapper = styled.div`\n  position: relative;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const MovieYear = styled.p`\n  font-size: 14px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport {\n  Container,\n  List,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieRating,\n  MovieWrapper,\n  MovieInfoWrapper,\n  MovieTitle,\n  MovieYear,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {movies.map(\n          ({ id, name, title, release_date, poster_path, vote_average }) => {\n            const year = release_date\n              ? new Date(release_date).getFullYear()\n              : '';\n            const vote = (vote_average * 10).toFixed();\n            const imageURL = `${BASE_URL}${poster_path}`;\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieWrapper>\n                    {poster_path && (\n                      <MovieImage\n                        src={imageURL}\n                        alt=\"movie-foto\"\n                        width=\"250\"\n                        height=\"380\"\n                      />\n                    )}\n                    <MovieRating>{vote}%</MovieRating>\n                  </MovieWrapper>\n                  <MovieInfoWrapper>\n                    <MovieTitle> {title ?? name}</MovieTitle>\n                    <MovieYear>({year})</MovieYear>\n                  </MovieInfoWrapper>\n                </MovieLink>\n              </MovieItem>\n            );\n          }\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport getMovies from 'service/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const trendingData = await getMovies('trending/movie/week');\n\n        setTrendingMovies(trendingData.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error.message);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <div>\n        <MoviesList movies={trendingMovies} />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","const MovieVideo = ({ name, type, official, videoKey }) => {\n  return (\n    type === 'Trailer' &&\n    official === true && (\n      <div>\n        <iframe\n          title={name}\n          width=\"560\"\n          height=\"315\"\n          src={`https://www.youtube.com/embed/${videoKey}`}\n          allowFullScreen=\"true\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        ></iframe>\n      </div>\n    )\n  );\n};\n\nexport default MovieVideo;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 400px;\n  height: 550px;\n\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  videos,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n          {videos && videos.length > 0 && (\n            <div>\n              {videos.map(video => (\n                <MovieVideo\n                  key={video.id}\n                  name={video.name}\n                  type={video.type}\n                  official={video.official}\n                  videoKey={video.key}\n                />\n              ))}\n            </div>\n          )}\n        </DescriptionContainer>\n      </Wrapper>\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n\n        console.log(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  console.log(videos);\n  const defaulImage =\n    'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaulImage\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaulImage\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","MovieItem","_templateObject3","MovieLink","Link","_templateObject4","MovieImage","_templateObject5","MovieRating","_templateObject6","MovieWrapper","_templateObject7","MovieTitle","_templateObject8","MovieYear","_templateObject9","MovieInfoWrapper","_templateObject10","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","name","title","release_date","poster_path","vote_average","year","Date","getFullYear","vote","toFixed","imageURL","concat","BASE_URL","_jsxs","to","state","from","src","alt","width","height","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","useEffect","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","trendingData","_context","prev","next","getMovies","sent","results","t0","console","error","message","stop","apply","arguments","MoviesList","type","official","videoKey","allowFullScreen","frameBorder","allow","Title","Wrapper","props","background","Image","DescriptionContainer","UserScoreWrapper","UserScore","UserScoreValue","Overview","OverviewText","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","_templateObject16","ListItem","_templateObject17","StyledLink","_templateObject18","backdrop_path","overview","genres","videos","length","genre","video","MovieVideo","key","_Fragment","GoArrowLeft","_location$state$from","_location$state","movieId","useParams","details","setDetails","_useState3","_useState4","setVideos","_useState5","_useState6","isLoading","setIsLoading","BackLinkLocationRef","useRef","fetchData","movieDetails","movieVideos","log","toast","finish","defaulImage","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","fallback","Outlet","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}