{"version":3,"file":"static/js/754.ff9e06b0.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: black;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 450px;\n  height: auto;\n  margin-bottom: 10px;\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  font-size: 20px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const OverviewText = styled.p`\n  margin-bottom: 15px;\n  font-style: italic;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  padding-bottom: 20px;\n  border-bottom: 1px solid black;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  &:hover {\n    color: red;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  poster_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n}) => {\n  const date = new Date(release_date);\n  const year = date.getFullYear();\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Title>\n        {title} ({year})\n      </Title>\n\n      <Wrapper>\n        {' '}\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n        <DescriptionContainer>\n          <UserScore>User Score: {vote}%</UserScore>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          {genres && genres.length > 0 && (\n            <Genres>\n              Genres:{' '}\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </Genres>\n          )}\n        </DescriptionContainer>\n      </Wrapper>\n      <InfoContainer>\n        {' '}\n        <AdditionalInfo>Additional information</AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // useEffect(() => {\n  //   if (!movieId) return;\n  // }, [movieId]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        setError('');\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n        console.log(movieDetails);\n      } catch (error) {\n        setError('Something went wrong!!!');\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <div>\n      {details && (\n        <MovieInfo\n          {...details}\n          poster_path={`${BASE_URL}${details.poster_path}`}\n        />\n      )}\n      <Outlet />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Wrapper","_templateObject3","Image","_templateObject4","DescriptionContainer","_templateObject5","UserScore","_templateObject6","Overview","_templateObject7","OverviewText","_templateObject8","Genres","_templateObject9","InfoContainer","_templateObject10","AdditionalInfo","_templateObject11","List","_templateObject12","ListItem","_templateObject13","StyledLink","Link","_templateObject14","_ref","title","poster_path","vote_average","overview","genres","release_date","year","Date","getFullYear","vote","toFixed","_jsxs","children","_jsx","src","alt","width","height","length","map","genre","name","id","to","Suspense","fallback","Loader","Outlet","movieId","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","getMovies","concat","sent","console","log","t0","toast","message","finish","stop","apply","arguments","MovieInfo","_objectSpread","API_KEY","BASE_URL","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}