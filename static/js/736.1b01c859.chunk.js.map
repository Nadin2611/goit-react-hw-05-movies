{"version":3,"file":"static/js/736.1b01c859.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/api.js","service/defaultImages.js","service/scroll.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin: 10px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CastItem = styled.li`\n  margin-bottom: 10px;\n  border: 1px solid white;\n  border-radius: 10px;\n  padding-bottom: 14px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: white;\n  max-width: 122px;\n  text-align: center;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 120px;\n  height: 170px;\n  margin-bottom: 4px;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const ActorName = styled.h2`\n  font-size: 14px;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const CharacterName = styled.p`\n  font-size: 10px;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const StyledLinkActor = styled(Link)`\n  text-decoration: none;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { handleScroll } from 'service/scroll';\nimport { getMovies } from 'service/api';\nimport { defaultImageActor } from 'service/defaultImages';\n\nimport {\n  ActorName,\n  CastItem,\n  CharacterName,\n  Container,\n  List,\n  ProfileImage,\n  StyledLinkActor,\n} from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      try {\n        setIsLoading(true);\n\n        const actorInfo = await getMovies(`movie/${movieId}/credits`);\n\n        if (actorInfo.cast.length === 0) {\n          toast.warn('Sorry, there is no information about the cast.');\n        }\n\n        setCast(actorInfo.cast);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n        handleScroll('actors');\n      }\n    };\n    if (movieId) {\n      fetchCast();\n    }\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n\n      {cast && (\n        <List name=\"actors\">\n          {cast.map(person => (\n            <StyledLinkActor key={person.id} to={`/person/${person.id}`}>\n              <CastItem>\n                <ProfileImage\n                  src={\n                    person.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${person.profile_path}`\n                      : defaultImageActor\n                  }\n                  alt=\"profile-foto\"\n                />\n\n                <ActorName>{person.name}</ActorName>\n                <CharacterName>{person.character}</CharacterName>\n              </CastItem>\n            </StyledLinkActor>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\n// const getRequestToken = async () => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}authentication/token/new`, {\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     const requestToken = response.data.request_token;\n//     console.log(response);\n//     console.log(response.data);\n//     return requestToken;\n//   } catch (error) {\n//     console.error('Помилка при отриманні запитового токену:', error);\n//     throw error;\n//   }\n// };\n\n// const createSessionId = async requestToken => {\n//   try {\n//     const response = await axios.post(`${BASE_URL}authentication/session/new`, {\n//       request_token: requestToken,\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     return response.data.session_id;\n//   } catch (error) {\n//     console.error('Помилка при створенні сеансового ідентифікатора:', error);\n//     throw error;\n//   }\n// };\n\n// const validateTokenWithLogin = async (username, password, requestToken) => {\n//   try {\n//     // console.log(username);\n//     // console.log(password);\n//     // console.log(requestToken);\n\n//     const response = await axios.post(\n//       `${BASE_URL}authentication/token/validate_with_login`,\n//       {\n//         username: username,\n//         password: password,\n//         request_token: requestToken,\n//       },\n//       {\n//         params: {\n//           api_key: API_KEY,\n//         },\n//       }\n//     );\n\n//     return response.data.session_id;\n//   } catch (error) {\n//     console.error('Помилка при авторизації токену:', error);\n//     throw error;\n//   }\n// };\n\nexport { getMovies };\n","export const defaultImageMovie =\n  'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\nexport const defaultImageActor =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n","import { scroller } from 'react-scroll';\n\nexport const handleScroll = element => {\n  scroller.scrollTo(element, {\n    duration: 500,\n    smooth: true,\n    offset: -120,\n  });\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","CastItem","_templateObject3","ProfileImage","_templateObject4","ActorName","_templateObject5","CharacterName","_templateObject6","StyledLinkActor","Link","_templateObject7","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","actorInfo","_context","prev","next","getMovies","concat","sent","length","toast","t0","handleScroll","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","name","map","person","to","id","src","profile_path","defaultImageActor","alt","character","API_KEY","BASE_URL","endpoint","params","response","_args","undefined","axios","_objectSpread","api_key","abrupt","data","_x","defaultImageMovie","element","scroller","duration","smooth","offset"],"sourceRoot":""}