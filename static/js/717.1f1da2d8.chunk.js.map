{"version":3,"file":"static/js/717.1f1da2d8.chunk.js","mappings":"qoBAIaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gDAKtBC,EAAQH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mGAOjBG,EAAUL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+RAU3B,SAAAK,GAAK,OAAKA,EAAMC,WAAU,OAAAC,OAAUF,EAAMC,WAAU,KAAM,MAAM,IAKzDE,EAAQV,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,sFAOlBU,EAAuBZ,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,gGAOjCY,EAAmBd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,+DAM7Bc,EAAYhB,EAAAA,GAAAA,EAAQiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gCAIpBgB,EAAiBlB,EAAAA,GAAAA,EAAQmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,QAEzBkB,EAAWpB,EAAAA,GAAAA,EAAQqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,uDAKnBoB,EAAetB,EAAAA,GAAAA,EAAQuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,qDAKvBsB,EAAgBxB,EAAAA,GAAAA,IAAUyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,QAE1BwB,EAAc1B,EAAAA,GAAAA,GAAS2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,yEAMvB0B,EAAS5B,EAAAA,GAAAA,GAAS6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,mJAUlB4B,EAAgB9B,EAAAA,GAAAA,IAAU+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,yHAO1B8B,EAAiBhC,EAAAA,GAAAA,EAAQiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,qDAKzBgC,EAAOlC,EAAAA,GAAAA,GAASmC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,mHAQhBkC,EAAWpC,EAAAA,GAAAA,GAASqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,sDAKpBoC,GAAatC,EAAAA,EAAAA,IAAOuC,EAAAA,GAAPvC,CAAYwC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,kV,8LC5GzBH,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAItBuC,EAAgBzC,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kDAI1BwC,EAAY1C,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,QAEtByC,EAAe3C,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iDAIzB0C,EAAc5C,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,QAExB2C,EAAS7C,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,2CAInB4C,EAAW9C,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,6CAIrB6C,EAAW/C,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,QAErB8C,EAAgBhD,EAAAA,GAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,kDAI1B+C,EAAajD,EAAAA,GAAAA,IAAUuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,+CAIvBgD,EAAoBlD,EAAAA,GAAAA,IAAUyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,sDAI9BiD,EAAYnD,EAAAA,GAAAA,GAAS2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,8CAIrBkD,EAAWpD,EAAAA,GAAAA,EAAQ6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,6CAInBmD,EAAYrD,EAAAA,GAAAA,GAAS+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,QAErBoD,EAAmBtD,EAAAA,GAAAA,IAAUiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,Q,SC4D1C,EA3FkB,SAAHqD,GASR,IARLC,EAAYD,EAAZC,aACAC,EAAMF,EAANE,OACAC,EAAQH,EAARG,SACAC,EAAQJ,EAARI,SACAC,EAAcL,EAAdK,eACAC,EAAaN,EAAbM,cACAC,EAAIP,EAAJO,KACAC,EAASR,EAATQ,UAoBA,OACEC,EAAAA,EAAAA,MAACjE,EAAS,CAAAkE,SAAA,EACRD,EAAAA,EAAAA,MAACvB,EAAa,CAAAwB,SAAA,CACXT,IACCU,EAAAA,EAAAA,KAACxB,EAAS,CACRyB,IACEX,EAAY,mCAAA/C,OAC2B+C,GATjD,gFAYQY,IAAI,aACJC,MAAM,MACNC,OAAO,SAGXN,EAAAA,EAAAA,MAACrB,EAAY,CAAAsB,SAAA,EACXC,EAAAA,EAAAA,KAAC/D,EAAAA,GAAK,CAAA8D,SAAC,0BAEPD,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,EACVC,EAAAA,EAAAA,KAACb,EAAS,CAAAY,SAAC,YACXC,EAAAA,EAAAA,KAACrB,EAAM,CAAAoB,SAtCO,SAAAR,GACtB,OAAQA,GACN,KAAK,EACH,MAAO,0BACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,aACT,QACE,MAAO,UAEb,CAyBmBc,CAAgBd,SAG3BO,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,EACVC,EAAAA,EAAAA,KAACb,EAAS,CAAAY,SAAC,cACXC,EAAAA,EAAAA,KAACpB,EAAQ,CAAAmB,SAAEP,OAGZC,IACCK,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,EACVC,EAAAA,EAAAA,KAACb,EAAS,CAAAY,SAAC,cACXC,EAAAA,EAAAA,KAACnB,EAAQ,CAAAkB,SAAEN,QAIfK,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,EACVC,EAAAA,EAAAA,KAACb,EAAS,CAAAY,SAAC,oBACXC,EAAAA,EAAAA,KAAClB,EAAa,CAAAiB,SAAEL,OAGjBC,GAAiBA,EAAcW,OAAS,IACvCR,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,EACVC,EAAAA,EAAAA,KAACb,EAAS,CAAAY,SAAC,mBACXC,EAAAA,EAAAA,KAACjB,EAAU,CAAAgB,SACRJ,EAAcY,KAAI,SAACX,EAAMY,GAAK,OAC7BR,EAAAA,EAAAA,KAAA,MAAAD,SAAiBH,GAARY,EAAkB,gBAOvCV,EAAAA,EAAAA,MAACV,EAAgB,CAAAW,SAAA,EACfC,EAAAA,EAAAA,KAACf,EAAS,CAAAc,SAAEH,IAAkB,KAC9BE,EAAAA,EAAAA,MAACd,EAAiB,CAAAe,SAAA,EAChBC,EAAAA,EAAAA,KAAC/D,EAAAA,GAAK,CAAA8D,SAAC,cACPC,EAAAA,EAAAA,KAACd,EAAQ,CAAAa,SAAEF,YAKrB,E,UCzDA,EA9CkB,WAChB,IAAQY,GAAaC,EAAAA,EAAAA,MAAbD,SACRE,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,QAAQC,IAAIT,IAEZU,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAA/B,GAAAgC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEMC,EAAAA,EAAAA,GAAU,UAADrF,OAAWkE,IAAY,KAAD,EAAlDe,EAAUC,EAAAI,KAEhBb,EAAcQ,GACdP,QAAQC,IAAIM,EAAWjC,QAAQkC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE/BR,QAAQc,MAAM,oCAAqCN,EAAAK,GAAME,SAAS,yBAAAP,EAAAQ,OAAA,GAAAV,EAAA,kBAErE,kBATmB,OAAAlC,EAAA6C,MAAA,KAAAC,UAAA,KAUpBf,GACF,GAAG,CAACX,IAEJ,IAAA2B,EASIrB,GAAc,CAAC,EARjBzB,EAAY8C,EAAZ9C,aACAC,EAAM6C,EAAN7C,OACAC,EAAQ4C,EAAR5C,SACAC,EAAQ2C,EAAR3C,SACAC,EAAc0C,EAAd1C,eACAC,EAAayC,EAAbzC,cACAC,EAAIwC,EAAJxC,KACAC,EAASuC,EAATvC,UAGF,OACEG,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACqC,EAAS,CACR/C,aAAcA,EACdC,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVC,eAAgBA,EAChBC,cAAeA,EACfC,KAAMA,EACNC,UAAWA,KAInB,C,4EC/CMyC,EAAU,mCACHC,EAAW,gCAElBX,EAAS,eAAAvC,GAAAgC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOiB,GAAQ,IAAAC,EAAAC,EAAAC,EAAAR,UAAA,OAAAb,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAa,OAAXc,EAAME,EAAArC,OAAA,QAAAsC,IAAAD,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAClB,EAAAE,KAAA,EACrBkB,EAAAA,EAAAA,IAAU,GAADtG,OAAIgG,GAAQhG,OAAGiG,GAAY,CACzDC,QAAMK,EAAAA,EAAAA,GAAA,CACJC,QAAST,GACNG,KAEJ,KAAD,EALY,OAARC,EAAQjB,EAAAI,KAAAJ,EAAAuB,OAAA,SAMPN,EAASO,MAAI,wBAAAxB,EAAAQ,OAAA,GAAAV,EAAA,KACrB,gBARc2B,GAAA,OAAA7D,EAAA6C,MAAA,KAAAC,UAAA,KAUf,K","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/ActorInfo/ActorInfo.styled.jsx","components/ActorInfo/ActorInfo.jsx","pages/ActorPage.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 450px;\n  height: auto;\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n`;\n\nexport const FotoContainer = styled.div`\n  /* Your FotoContainer styles here */\n`;\n\nexport const ActorFoto = styled.img``;\n\nexport const ActorDetails = styled.div`\n  /* Your ActorDetails styles here */\n`;\n\nexport const InfoWrapper = styled.div``;\n\nexport const Gender = styled.div`\n  /* Your Gender styles here */\n`;\n\nexport const Birthday = styled.div`\n  /* Your Birthday styles here */\n`;\n\nexport const Deathday = styled.div``;\n\nexport const BirthdayPlace = styled.div`\n  /* Your BirthdayPlace styles here */\n`;\n\nexport const OtherNames = styled.div`\n  /* Your OtherNames styles here */\n`;\n\nexport const BiografyContainer = styled.div`\n  /* Your BiografyContainer styles here */\n`;\n\nexport const ActorName = styled.h2`\n  /* Your ActorName styles here */\n`;\n\nexport const Biografy = styled.p`\n  /* Your Biografy styles here */\n`;\n\nexport const InfoTitle = styled.h3``;\n\nexport const ActorInfoWrapper = styled.div``;\n","import { Title } from 'components/MovieInfo/MovieInfo.styled';\nimport {\n  Container,\n  FotoContainer,\n  ActorFoto,\n  ActorDetails,\n  Gender,\n  Birthday,\n  BirthdayPlace,\n  OtherNames,\n  BiografyContainer,\n  ActorName,\n  Biografy,\n  Deathday,\n  InfoTitle,\n  InfoWrapper,\n  ActorInfoWrapper,\n} from './ActorInfo.styled';\n\nconst ActorInfo = ({\n  profile_path,\n  gender,\n  birthday,\n  deathday,\n  place_of_birth,\n  also_known_as,\n  name,\n  biography,\n}) => {\n  const getGenderString = gender => {\n    switch (gender) {\n      case 0:\n        return 'Not set / not specified';\n      case 1:\n        return 'Female';\n      case 2:\n        return 'Male';\n      case 3:\n        return 'Non-binary';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const defaulImage =\n    'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n\n  return (\n    <Container>\n      <FotoContainer>\n        {profile_path && (\n          <ActorFoto\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                : defaulImage\n            }\n            alt=\"actor-foto\"\n            width=\"300\"\n            height=\"450\"\n          />\n        )}\n        <ActorDetails>\n          <Title>Personal information</Title>\n\n          <InfoWrapper>\n            <InfoTitle>Gender</InfoTitle>\n            <Gender>{getGenderString(gender)}</Gender>\n          </InfoWrapper>\n\n          <InfoWrapper>\n            <InfoTitle>Birthday</InfoTitle>\n            <Birthday>{birthday}</Birthday>\n          </InfoWrapper>\n\n          {deathday && (\n            <InfoWrapper>\n              <InfoTitle>Deathday</InfoTitle>\n              <Deathday>{deathday}</Deathday>\n            </InfoWrapper>\n          )}\n\n          <InfoWrapper>\n            <InfoTitle>Place of birth</InfoTitle>\n            <BirthdayPlace>{place_of_birth}</BirthdayPlace>\n          </InfoWrapper>\n\n          {also_known_as && also_known_as.length > 0 && (\n            <InfoWrapper>\n              <InfoTitle>Also known as</InfoTitle>\n              <OtherNames>\n                {also_known_as.map((name, index) => (\n                  <li key={index}>{name}</li>\n                ))}\n              </OtherNames>\n            </InfoWrapper>\n          )}\n        </ActorDetails>\n      </FotoContainer>\n      <ActorInfoWrapper>\n        <ActorName>{name}</ActorName>{' '}\n        <BiografyContainer>\n          <Title>Biografy</Title>\n          <Biografy>{biography}</Biografy>\n        </BiografyContainer>\n      </ActorInfoWrapper>\n    </Container>\n  );\n};\n\nexport default ActorInfo;\n","import { useState, useEffect } from 'react';\nimport getMovies from 'service/api';\nimport ActorInfo from 'components/ActorInfo/ActorInfo';\nimport { useParams } from 'react-router-dom';\n\nconst ActorPage = () => {\n  const { personId } = useParams();\n  const [personInfo, setPersonInfo] = useState(null);\n  console.log(personId);\n\n  useEffect(() => {\n    const fetchActorInfo = async () => {\n      try {\n        const personData = await getMovies(`person/${personId}`);\n\n        setPersonInfo(personData);\n        console.log(personData.gender);\n      } catch (error) {\n        console.error('Error fetching actor information:', error.message);\n      }\n    };\n    fetchActorInfo();\n  }, [personId]);\n\n  const {\n    profile_path,\n    gender,\n    birthday,\n    deathday,\n    place_of_birth,\n    also_known_as,\n    name,\n    biography,\n  } = personInfo || {};\n\n  return (\n    <div>\n      <ActorInfo\n        profile_path={profile_path}\n        gender={gender}\n        birthday={birthday}\n        deathday={deathday}\n        place_of_birth={place_of_birth}\n        also_known_as={also_known_as}\n        name={name}\n        biography={biography}\n      />\n    </div>\n  );\n};\n\nexport default ActorPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Wrapper","_templateObject3","props","background","concat","Image","_templateObject4","DescriptionContainer","_templateObject5","UserScoreWrapper","_templateObject6","UserScore","_templateObject7","UserScoreValue","_templateObject8","Overview","_templateObject9","OverviewText","_templateObject10","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","List","_templateObject16","ListItem","_templateObject17","StyledLink","Link","_templateObject18","FotoContainer","ActorFoto","ActorDetails","InfoWrapper","Gender","Birthday","Deathday","BirthdayPlace","OtherNames","BiografyContainer","ActorName","Biografy","InfoTitle","ActorInfoWrapper","_ref","profile_path","gender","birthday","deathday","place_of_birth","also_known_as","name","biography","_jsxs","children","_jsx","src","alt","width","height","getGenderString","length","map","index","personId","useParams","_useState","useState","_useState2","_slicedToArray","personInfo","setPersonInfo","console","log","useEffect","fetchActorInfo","_asyncToGenerator","_regeneratorRuntime","_callee","personData","_context","prev","next","getMovies","sent","t0","error","message","stop","apply","arguments","_ref2","ActorInfo","API_KEY","BASE_URL","endpoint","params","response","_args","undefined","axios","_objectSpread","api_key","abrupt","data","_x"],"sourceRoot":""}