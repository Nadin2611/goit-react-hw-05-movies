{"version":3,"file":"static/js/672.1c5ec198.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Container/Container.styled.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MovieVideo/MovieVideo.styled.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","service/api.js","service/defaultImages.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 12px;\n  padding: 6px 6px;\n  width: 100px;\n  margin-bottom: 20px;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 0 0 13px 3px blue;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 335px;\n  padding: 0 20px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  width: 200px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 12px;\n  color: white;\n  text-decoration: none;\n`;\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieRating = styled.div`\n  background-color: blue;\n  width: 40px;\n  height: 40px;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: -16px;\n  left: 10px;\n`;\n\nexport const MovieWrapper = styled.div`\n  position: relative;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const MovieYear = styled.p`\n  font-size: 14px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport {\n  Container,\n  List,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieRating,\n  MovieWrapper,\n  MovieInfoWrapper,\n  MovieTitle,\n  MovieYear,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {movies.map(\n          ({ id, name, title, release_date, poster_path, vote_average }) => {\n            if (!release_date) {\n              return null;\n            }\n            const year = new Date(release_date).getFullYear();\n            const vote = (vote_average * 10).toFixed();\n            const imageURL = `${BASE_URL}${poster_path}`;\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieWrapper>\n                    <MovieImage\n                      src={poster_path ? imageURL : defaultImageMovie}\n                      alt=\"movie-foto\"\n                      width=\"200\"\n                      height=\"320\"\n                    />\n\n                    <MovieRating>{vote}%</MovieRating>\n                  </MovieWrapper>\n                  <MovieInfoWrapper>\n                    <MovieTitle> {title ?? name}</MovieTitle>\n                    <MovieYear>({year})</MovieYear>\n                  </MovieInfoWrapper>\n                </MovieLink>\n              </MovieItem>\n            );\n          }\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const StyledMovieVideo = styled.div`\n  iframe {\n    width: 100%;\n    max-width: 560px;\n    height: auto;\n    margin-top: 30px;\n    border: 0;\n  }\n`;\n","import { StyledMovieVideo } from './MovieVideo.styled';\n\nconst MovieVideo = ({ name, videoKey }) => {\n  return (\n    <StyledMovieVideo>\n      <iframe\n        title={name}\n        src={`https://www.youtube.com/embed/${videoKey}`}\n        allowFullScreen\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n    </StyledMovieVideo>\n  );\n};\n\nexport default MovieVideo;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n  height: 300px;\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  // margin-top: 10px;\n  font-size: 16px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  text-shadow: 2px 2px 4px blue;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  text-shadow: 2px 2px 4px blue;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 14px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 16px;\n  text-shadow: 2px 2px 4px blue;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  font-size: 14px;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n  width: 100%;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 16px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  padding: 4px 10px;\n  border-radius: 10px;\n  font-size: 16px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: box-shadow 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n  }\n\n  &.active {\n    color: white;\n    box-shadow: 0 0 13px 3px blue;\n  }\n`;\n","import StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\nimport TheaterComedyOutlinedIcon from '@mui/icons-material/TheaterComedyOutlined';\nimport MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  Link,\n  ListItem,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n  DescriptionWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  firstOfficialTrailer,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n      </Wrapper>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <DescriptionWrapper>\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n        {firstOfficialTrailer && (\n          <MovieVideo\n            name={firstOfficialTrailer.name}\n            type={firstOfficialTrailer.type}\n            official={firstOfficialTrailer.official}\n            videoKey={firstOfficialTrailer.key}\n          />\n        )}\n      </DescriptionWrapper>\n\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <Link to=\"cast\">\n              <TheaterComedyOutlinedIcon\n                style={{ fontSize: '16px', marginRight: '4px' }}\n              />{' '}\n              Cast\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link to=\"reviews\">\n              <StarBorderOutlinedIcon\n                style={{ fontSize: '16px', marginRight: '4px' }}\n              />\n              Reviews\n            </Link>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { getMovies } from 'service/api';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\nimport { Container } from 'components/Container/Container.styled';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const findFirstOfficialTrailer = videos => {\n    return videos?.find(\n      video => video.type === 'Trailer' && video.official === true\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const filteredVideos = findFirstOfficialTrailer(videos);\n\n  return (\n    <Container>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          firstOfficialTrailer={filteredVideos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaultImageMovie\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaultImageMovie\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nconst getRequestToken = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}authentication/token/new`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return response.data.request_token;\n  } catch (error) {\n    console.error('Помилка при отриманні токену:', error);\n    throw error;\n  }\n};\n\nconst validateTokenWithLogin = async (username, password, requestToken) => {\n  try {\n    const response = await axios.post(\n      `${BASE_URL}authentication/token/validate_with_login`,\n      {\n        username,\n        password,\n        request_token: requestToken,\n      },\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    return response.data.session_id;\n  } catch (error) {\n    console.error('Помилка при авторизації токену:', error);\n    throw error;\n  }\n};\n\nexport { getMovies, getRequestToken, validateTokenWithLogin };\n","export const defaultImageMovie =\n  'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\nexport const defaultImageActor =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","_Fragment","_jsxs","GoArrowLeft","Container","List","_templateObject2","MovieItem","_templateObject3","MovieLink","_templateObject4","MovieImage","_templateObject5","MovieRating","_templateObject6","MovieWrapper","_templateObject7","MovieTitle","_templateObject8","MovieYear","_templateObject9","MovieInfoWrapper","_templateObject10","movies","location","useLocation","map","_ref2","id","name","title","release_date","poster_path","vote_average","year","Date","getFullYear","vote","toFixed","imageURL","concat","BASE_URL","state","from","src","defaultImageMovie","alt","width","height","StyledMovieVideo","videoKey","allowFullScreen","frameBorder","allow","Title","Wrapper","props","background","Image","DescriptionContainer","DescriptionWrapper","UserScoreWrapper","UserScore","UserScoreValue","Overview","OverviewText","_templateObject11","GenresWrapper","_templateObject12","GenresTitle","_templateObject13","Genres","_templateObject14","InfoContainer","_templateObject15","AdditionalInfo","_templateObject16","_templateObject17","ListItem","_templateObject18","NavLink","_templateObject19","backdrop_path","overview","genres","firstOfficialTrailer","length","genre","MovieVideo","type","official","key","TheaterComedyOutlinedIcon","style","fontSize","marginRight","StarBorderOutlinedIcon","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","videos","setVideos","_useState5","_useState6","isLoading","setIsLoading","BackLinkLocationRef","useRef","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","movieVideos","_context","prev","next","getMovies","sent","results","t0","toast","finish","stop","apply","arguments","filteredVideos","find","video","findFirstOfficialTrailer","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","fallback","Outlet","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x","getRequestToken","_callee2","_context2","request_token","console","error","validateTokenWithLogin","_ref3","_callee3","username","password","requestToken","_context3","session_id","_x2","_x3","_x4","defaultImageActor"],"sourceRoot":""}