{"version":3,"file":"static/js/736.5e865317.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin: 10px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  margin-bottom: 10px;\n  border: 1px solid white;\n  border-radius: 10px;\n  padding-bottom: 20px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nexport const ProfileImage = styled.img`\n  width: 200px;\n  height: 270px;\n  margin-bottom: 8px;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const ActorName = styled.h2`\n  font-size: 18px;\n  text-align: center;\n  color: white;\n`;\n\nexport const CharacterName = styled.p`\n  font-size: 14px;\n  color: white;\n  text-align: center;\n  max-width: 200px;\n  padding: 4px;\n`;\n\nexport const StyledLinkActor = styled(Link)`\n  text-decoration: none;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport getMovies from 'service/api';\n\nimport {\n  ActorName,\n  CastItem,\n  CharacterName,\n  Container,\n  List,\n  ProfileImage,\n  StyledLinkActor,\n} from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      try {\n        setIsLoading(true);\n\n        const actorInfo = await getMovies(`movie/${movieId}/credits`);\n\n        if (actorInfo.cast.length === 0) {\n          toast.warn('Sorry, there is no information about the cast.');\n        }\n\n        setCast(actorInfo.cast);\n        console.log(actorInfo.cast);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchCast();\n    }\n  }, [movieId]);\n\n  const defaulImage =\n    'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n\n      {cast && (\n        <List>\n          {cast.map(person => (\n            <StyledLinkActor key={person.id} to={`/person/${person.id}`}>\n              <CastItem>\n                <ProfileImage\n                  src={\n                    person.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${person.profile_path}`\n                      : defaulImage\n                  }\n                  alt=\"profile-foto\"\n                />\n\n                <ActorName>{person.name}</ActorName>\n                <CharacterName>{person.character}</CharacterName>\n              </CastItem>\n            </StyledLinkActor>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","CastItem","_templateObject3","ProfileImage","_templateObject4","ActorName","_templateObject5","CharacterName","_templateObject6","StyledLinkActor","Link","_templateObject7","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","actorInfo","_context","prev","next","getMovies","concat","sent","length","toast","console","log","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","person","to","id","src","profile_path","alt","name","character","API_KEY","BASE_URL","endpoint","params","response","_args","undefined","axios","_objectSpread","api_key","abrupt","data","_x"],"sourceRoot":""}