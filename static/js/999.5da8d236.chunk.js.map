{"version":3,"file":"static/js/999.5da8d236.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieVideo/MovieVideo.styled.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","service/api.js","service/defaultImages.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 12px;\n  padding: 6px 6px;\n  width: 100px;\n  margin-bottom: 20px;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 0 0 13px 3px blue;\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    padding: 8px 8px;\n    width: 120px;\n\n    &:hover,\n    &:focus {\n      color: blue;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 18px;\n    padding: 10px 10px;\n    width: 140px;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const StyledMovieVideo = styled.div`\n  iframe {\n    width: 100%;\n    max-width: 560px;\n    height: auto;\n    margin-top: 30px;\n    border: 0;\n  }\n`;\n","import { StyledMovieVideo } from './MovieVideo.styled';\n\nconst MovieVideo = ({ name, videoKey }) => {\n  return (\n    <StyledMovieVideo>\n      <iframe\n        title={name}\n        src={`https://www.youtube.com/embed/${videoKey}`}\n        allowFullScreen\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n    </StyledMovieVideo>\n  );\n};\n\nexport default MovieVideo;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 28px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 32px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  position: relative; //зміни\n  flex-direction: column;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  border-radius: 10px;\n\n  @media (min-width: 768px) {\n    width: 250px;\n    height: 370px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 300px;\n    height: 430px;\n  }\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  // margin-top: 10px;\n  font-size: 16px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 22px;\n  }\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  text-shadow: 2px 2px 4px blue;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  text-shadow: 2px 2px 4px blue;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 14px;\n  font-style: italic;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 20px;\n  }\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.p`\n  font-size: 16px;\n  text-shadow: 2px 2px 4px blue;\n  margin-bottom: 0;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 22px;\n  }\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  font-size: 14px;\n  list-style: none;\n  gap: 10px;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 20px;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n  width: 100%;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 16px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  padding: 4px 10px;\n  border-radius: 10px;\n  font-size: 16px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: box-shadow 0.3s, color 0.3s;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n\n    &:hover,\n    &:focus {\n      color: white;\n    }\n\n    &.active {\n      color: white;\n      box-shadow: 0 0 13px 3px blue;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 24px;\n  }\n`;\n","import StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\nimport TheaterComedyOutlinedIcon from '@mui/icons-material/TheaterComedyOutlined';\nimport MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  Link,\n  ListItem,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n  DescriptionWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  firstOfficialTrailer,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"200\" height=\"300\" />\n        )}\n      </Wrapper>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <DescriptionWrapper>\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n        {firstOfficialTrailer && (\n          <MovieVideo\n            name={firstOfficialTrailer.name}\n            type={firstOfficialTrailer.type}\n            official={firstOfficialTrailer.official}\n            videoKey={firstOfficialTrailer.key}\n          />\n        )}\n      </DescriptionWrapper>\n\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <Link to=\"cast\">\n              <TheaterComedyOutlinedIcon\n                style={{ fontSize: '16px', marginRight: '4px' }}\n              />{' '}\n              Cast\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link to=\"reviews\">\n              <StarBorderOutlinedIcon\n                style={{ fontSize: '16px', marginRight: '4px' }}\n              />\n              Reviews\n            </Link>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { getMovies } from 'service/api';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\nimport { Container } from 'components/Container/Container.styled';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const findFirstOfficialTrailer = videos => {\n    return videos?.find(\n      video => video.type === 'Trailer' && video.official === true\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const filteredVideos = findFirstOfficialTrailer(videos);\n\n  return (\n    <Container>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          firstOfficialTrailer={filteredVideos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaultImageMovie\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaultImageMovie\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\n// const getRequestToken = async () => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}authentication/token/new`, {\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     const requestToken = response.data.request_token;\n//     console.log(response);\n//     console.log(response.data);\n//     return requestToken;\n//   } catch (error) {\n//     console.error('Помилка при отриманні запитового токену:', error);\n//     throw error;\n//   }\n// };\n\n// const createSessionId = async requestToken => {\n//   try {\n//     const response = await axios.post(`${BASE_URL}authentication/session/new`, {\n//       request_token: requestToken,\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     return response.data.session_id;\n//   } catch (error) {\n//     console.error('Помилка при створенні сеансового ідентифікатора:', error);\n//     throw error;\n//   }\n// };\n\n// const validateTokenWithLogin = async (username, password, requestToken) => {\n//   try {\n//     // console.log(username);\n//     // console.log(password);\n//     // console.log(requestToken);\n\n//     const response = await axios.post(\n//       `${BASE_URL}authentication/token/validate_with_login`,\n//       {\n//         username: username,\n//         password: password,\n//         request_token: requestToken,\n//       },\n//       {\n//         params: {\n//           api_key: API_KEY,\n//         },\n//       }\n//     );\n\n//     return response.data.session_id;\n//   } catch (error) {\n//     console.error('Помилка при авторизації токену:', error);\n//     throw error;\n//   }\n// };\n\nexport { getMovies };\n","export const defaultImageMovie =\n  'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\nexport const defaultImageActor =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","_Fragment","_jsxs","GoArrowLeft","StyledMovieVideo","name","videoKey","title","src","concat","allowFullScreen","frameBorder","allow","Container","Title","_templateObject2","Wrapper","_templateObject3","props","background","Image","_templateObject4","DescriptionContainer","_templateObject5","DescriptionWrapper","_templateObject6","UserScoreWrapper","_templateObject7","UserScore","_templateObject8","UserScoreValue","_templateObject9","Overview","_templateObject10","OverviewText","_templateObject11","GenresWrapper","_templateObject12","GenresTitle","_templateObject13","Genres","_templateObject14","InfoContainer","_templateObject15","AdditionalInfo","_templateObject16","List","_templateObject17","ListItem","_templateObject18","NavLink","_templateObject19","poster_path","backdrop_path","vote_average","overview","genres","release_date","firstOfficialTrailer","year","Date","getFullYear","vote","toFixed","alt","width","height","length","map","genre","id","MovieVideo","type","official","key","TheaterComedyOutlinedIcon","style","fontSize","marginRight","StarBorderOutlinedIcon","BASE_URL","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","videos","setVideos","_useState5","_useState6","isLoading","setIsLoading","location","useLocation","BackLinkLocationRef","useRef","state","from","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","movieVideos","_context","prev","next","getMovies","sent","results","t0","toast","finish","stop","apply","arguments","filteredVideos","find","video","findFirstOfficialTrailer","BackLink","current","Loader","MovieInfo","_objectSpread","defaultImageMovie","Suspense","fallback","Outlet","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x","defaultImageActor"],"sourceRoot":""}