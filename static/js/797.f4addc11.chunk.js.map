{"version":3,"file":"static/js/797.f4addc11.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/MovieVideo/MovieVideo.styled.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","pages/MoviesPage.jsx","service/api.js","service/defaultImages.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  width: 250px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 18px;\n  color: white;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n  }\n`;\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieRating = styled.div`\n  background-color: blue;\n  width: 40px;\n  height: 40px;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: -16px;\n  left: 10px;\n`;\n\nexport const MovieWrapper = styled.div`\n  position: relative;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const MovieYear = styled.p`\n  font-size: 14px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport {\n  Container,\n  List,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieRating,\n  MovieWrapper,\n  MovieInfoWrapper,\n  MovieTitle,\n  MovieYear,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {movies.map(\n          ({ id, name, title, release_date, poster_path, vote_average }) => {\n            if (!release_date) {\n              return null;\n            }\n            const year = new Date(release_date).getFullYear();\n            const vote = (vote_average * 10).toFixed();\n            const imageURL = `${BASE_URL}${poster_path}`;\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieWrapper>\n                    <MovieImage\n                      src={poster_path ? imageURL : defaultImageMovie}\n                      alt=\"movie-foto\"\n                      width=\"250\"\n                      height=\"380\"\n                    />\n\n                    <MovieRating>{vote}%</MovieRating>\n                  </MovieWrapper>\n                  <MovieInfoWrapper>\n                    <MovieTitle> {title ?? name}</MovieTitle>\n                    <MovieYear>({year})</MovieYear>\n                  </MovieInfoWrapper>\n                </MovieLink>\n              </MovieItem>\n            );\n          }\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  width: 600px;\n  color: white;\n  border-radius: 18px;\n  border: none;\n  font-size: 20px;\n  background-color: transparent;\n  border: 2px solid white;\n  transition: border-color 0.3s;\n\n  &:hover,\n  &:focus,\n  &:not(:placeholder-shown) {\n    font-size: 20px;\n    border-color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 20px;\n  text-decoration: none;\n  background-color: white;\n  color: blue;\n  font-weight: 500;\n  border: none;\n  position: absolute;\n  right: 1px;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { FormContainer, Form, Label, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('search') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.search.value.trim().toLowerCase();\n    if (!query) {\n      return toast.warn('Please enter text!');\n    } else {\n      setSearchParams({ search: query });\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            defaultValue={query}\n            placeholder=\"Enter movie to search...\"\n            autoComplete=\"off\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </Label>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const StyledMovieVideo = styled.div`\n  iframe {\n    width: 560px;\n    height: 315px;\n    margin-top: 30px;\n    border: 0;\n  }\n`;\n","import { StyledMovieVideo } from './MovieVideo.styled';\n\nconst MovieVideo = ({ name, videoKey }) => {\n  return (\n    <StyledMovieVideo>\n      <iframe\n        title={name}\n        src={`https://www.youtube.com/embed/${videoKey}`}\n        allowFullScreen\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n    </StyledMovieVideo>\n  );\n};\n\nexport default MovieVideo;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 350px;\n  height: 520px;\n\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  videos,\n  firstOfficialTrailer,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n\n          {firstOfficialTrailer && (\n            <MovieVideo\n              name={firstOfficialTrailer.name}\n              type={firstOfficialTrailer.type}\n              official={firstOfficialTrailer.official}\n              videoKey={firstOfficialTrailer.key}\n            />\n          )}\n        </DescriptionContainer>\n      </Wrapper>\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const findFirstOfficialTrailer = videos => {\n    return videos?.find(\n      video => video.type === 'Trailer' && video.official === true\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const filteredVideos = findFirstOfficialTrailer(videos);\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          firstOfficialTrailer={filteredVideos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaultImageMovie\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaultImageMovie\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport getMovies from 'service/api';\n\nconst MoviesPage = () => {\n  const [searchParams] = useSearchParams();\n  const [moviesByKeyword, setMoviesByKeyword] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('search') ?? '';\n\n  const fetchMoviesByKeyword = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const moviesData = await getMovies('search/movie', { query });\n\n      if (moviesData.results.length === 0) {\n        toast.warn(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      } else {\n        toast.info(\n          `Found ${moviesData.results.length} ${\n            moviesData.results.length === 1 ? 'movie' : 'movies'\n          }.`\n        );\n      }\n\n      setMoviesByKeyword(moviesData.results);\n      setIsLoading(false);\n    } catch (error) {\n      toast.error('Something went wrong!!!');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n    fetchMoviesByKeyword();\n  }, [fetchMoviesByKeyword, query]);\n\n  return (\n    <>\n      <SearchForm />\n      {isLoading && <Loader />}\n\n      {moviesByKeyword.length > 0 && <MoviesList movies={moviesByKeyword} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n","export const defaultImageMovie =\n  'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\nexport const defaultImageActor =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","_Fragment","_jsxs","GoArrowLeft","Container","List","_templateObject2","MovieItem","_templateObject3","MovieLink","_templateObject4","MovieImage","_templateObject5","MovieRating","_templateObject6","MovieWrapper","_templateObject7","MovieTitle","_templateObject8","MovieYear","_templateObject9","MovieInfoWrapper","_templateObject10","movies","location","useLocation","map","_ref2","id","name","title","release_date","poster_path","vote_average","year","Date","getFullYear","vote","toFixed","imageURL","concat","BASE_URL","state","from","src","defaultImageMovie","alt","width","height","FormContainer","Form","Label","Input","Button","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","onSubmit","event","preventDefault","target","search","value","trim","toLowerCase","toast","type","defaultValue","placeholder","autoComplete","StyledMovieVideo","videoKey","allowFullScreen","frameBorder","allow","Title","Wrapper","props","background","Image","DescriptionContainer","UserScoreWrapper","UserScore","UserScoreValue","Overview","OverviewText","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","_templateObject16","ListItem","_templateObject17","_templateObject18","backdrop_path","overview","genres","firstOfficialTrailer","videos","length","genre","MovieVideo","official","key","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","details","setDetails","_useState3","_useState4","setVideos","_useState5","_useState6","isLoading","setIsLoading","BackLinkLocationRef","useRef","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","movieVideos","_context","prev","next","getMovies","sent","results","t0","finish","stop","apply","arguments","filteredVideos","find","video","findFirstOfficialTrailer","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","fallback","Outlet","moviesByKeyword","setMoviesByKeyword","fetchMoviesByKeyword","useCallback","moviesData","SearchForm","MoviesList","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x","defaultImageActor"],"sourceRoot":""}