{"version":3,"file":"static/js/310.efe6752e.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetailsPage.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 450px;\n  height: auto;\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  width: 250px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 18px;\n  color: white;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n  }\n`;\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieRating = styled.div`\n  background-color: blue;\n  width: 40px;\n  height: 40px;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: -16px;\n  left: 10px;\n`;\n\nexport const MovieWrapper = styled.div`\n  position: relative;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const MovieYear = styled.p`\n  font-size: 14px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport {\n  Container,\n  List,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieRating,\n  MovieWrapper,\n  MovieInfoWrapper,\n  MovieTitle,\n  MovieYear,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {movies.map(\n          ({ id, name, title, release_date, poster_path, vote_average }) => {\n            const year = release_date\n              ? new Date(release_date).getFullYear()\n              : '';\n            const vote = (vote_average * 10).toFixed();\n            const imageURL = `${BASE_URL}${poster_path}`;\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieWrapper>\n                    {poster_path && (\n                      <MovieImage\n                        src={imageURL}\n                        alt=\"movie-foto\"\n                        width=\"250\"\n                        height=\"380\"\n                      />\n                    )}\n                    <MovieRating>{vote}%</MovieRating>\n                  </MovieWrapper>\n                  <MovieInfoWrapper>\n                    <MovieTitle> {title ?? name}</MovieTitle>\n                    <MovieYear>({year})</MovieYear>\n                  </MovieInfoWrapper>\n                </MovieLink>\n              </MovieItem>\n            );\n          }\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n      </Wrapper>\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const defaulImage =\n    'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaulImage\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaulImage\n          }\n        />\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  width: 600px;\n  color: white;\n  border-radius: 18px;\n  border: none;\n  font-size: 20px;\n  background-color: transparent;\n  border: 2px solid white;\n  transition: border-color 0.3s;\n\n  &:hover,\n  &:focus,\n  &:not(:placeholder-shown) {\n    font-size: 20px;\n    border-color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 20px;\n  text-decoration: none;\n  background-color: white;\n  color: blue;\n  font-weight: 500;\n  border: none;\n  position: absolute;\n  right: 1px;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { FormContainer, Form, Label, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('search') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.search.value.trim().toLowerCase();\n    if (!query) {\n      return toast.warn('Please enter text!');\n    } else {\n      setSearchParams({ search: query });\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            defaultValue={query}\n            placeholder=\"Enter movie to search...\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </Label>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport getMovies from 'service/api';\n\nconst MoviesPage = () => {\n  const [searchParams] = useSearchParams();\n  const [moviesByKeyword, setMoviesByKeyword] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('search') ?? '';\n\n  const fetchMoviesByKeyword = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const moviesData = await getMovies('search/movie', { query });\n\n      if (moviesData.results.length === 0) {\n        toast.warn(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      } else {\n        toast.info(\n          `Found ${moviesData.results.length} ${\n            moviesData.results.length === 1 ? 'movie' : 'movies'\n          }.`\n        );\n      }\n\n      setMoviesByKeyword(moviesData.results);\n      setIsLoading(false);\n    } catch (error) {\n      toast.error('Something went wrong!!!');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n    fetchMoviesByKeyword();\n  }, [fetchMoviesByKeyword, query]);\n\n  return (\n    <>\n      <SearchForm />\n      {isLoading && <Loader />}\n\n      {moviesByKeyword.length > 0 && <MoviesList movies={moviesByKeyword} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Wrapper","_templateObject3","props","background","concat","Image","_templateObject4","DescriptionContainer","_templateObject5","UserScoreWrapper","_templateObject6","UserScore","_templateObject7","UserScoreValue","_templateObject8","Overview","_templateObject9","OverviewText","_templateObject10","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","List","_templateObject16","ListItem","_templateObject17","StyledLink","Link","_templateObject18","MovieItem","MovieLink","MovieImage","MovieRating","MovieWrapper","MovieTitle","MovieYear","MovieInfoWrapper","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","name","title","release_date","poster_path","vote_average","year","Date","getFullYear","vote","toFixed","imageURL","BASE_URL","_jsxs","to","state","from","src","alt","width","height","backdrop_path","overview","genres","length","genre","_Fragment","GoArrowLeft","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","isLoading","setIsLoading","BackLinkLocationRef","useRef","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","getMovies","sent","t0","toast","finish","stop","apply","arguments","defaulImage","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","fallback","Outlet","FormContainer","Form","Label","Input","Button","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","onSubmit","event","preventDefault","target","search","value","trim","toLowerCase","type","defaultValue","placeholder","moviesByKeyword","setMoviesByKeyword","fetchMoviesByKeyword","useCallback","moviesData","results","SearchForm","MoviesList","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}