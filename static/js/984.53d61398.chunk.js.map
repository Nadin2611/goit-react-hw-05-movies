{"version":3,"file":"static/js/984.53d61398.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Container/Container.styled.jsx","components/Reviews/Reviews.styled.jsx","components/ActorInfo/ActorInfo.styled.jsx","components/ActorMovies/ActorMovies.styled.jsx","components/ActorMovies/ActorMovies.jsx","components/ActorImages/ActorImages.styled.jsx","components/ActorImages/ActorImages.jsx","components/ActorInfo/ActorInfo.jsx","pages/ActorDetailsPage.jsx","components/MovieVideo/MovieVideo.styled.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","service/api.js","service/defaultImages.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 12px;\n  padding: 6px 6px;\n  width: 100px;\n  margin-bottom: 20px;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 0 0 13px 3px blue;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 335px;\n  padding: 0 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n`;\n\nexport const ReviewsList = styled.ul`\n  padding-left: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 6px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border: 1px solid blue;\n  border-radius: 10px;\n  padding: 12px;\n`;\n\nexport const ReviewersName = styled.h2`\n  font-size: 14px;\n  text-shadow: 2px 2px 4px blue;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.5;\n  font-size: 10px;\n  text-align: justify;\n`;\n\nexport const ShowMoreButton = styled.button`\n  color: white;\n  font-size: 12px;\n  background-color: transparent;\n  border: none;\n  align-self: flex-end;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n  display: flex;\n  flex-direction: column;\n  padding-top: 20px;\n`;\n\nexport const FotoContainer = styled.div`\n  margin-left: 10px;\n  display: flex;\n  flex-direction: column;\n  // align-items: center;\n  // justify-content: center;\n`;\n\nexport const ActorFoto = styled.img`\n  height: auto;\n  border-radius: 10px;\n  margin: 0 auto;\n`;\n\nexport const ActorDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const ActorDetailsTitle = styled.h2`\n  margin: 0px;\n  font-size: 18px;\n  font-weight: bold;\n  padding-top: 12px;\n`;\n\nexport const InfoWrapper = styled.div``;\n\nexport const Gender = styled.div`\n  /* Your Gender styles here */\n`;\n\nexport const Birthday = styled.div`\n  /* Your Birthday styles here */\n`;\n\nexport const Deathday = styled.div``;\n\nexport const BirthdayPlace = styled.div`\n  /* Your BirthdayPlace styles here */\n`;\n\nexport const OtherNames = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const BiographyContainer = styled.div``;\n\nexport const ActorName = styled.h1``;\n\nexport const Biography = styled.p`\n  font-size: 12px;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin: 0;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const NoBiography = styled.p`\n  font-size: 18px;\n`;\n\nexport const ActorInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 20px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ActorMoviesContainer = styled.div`\n  overflow-x: auto;\n  margin-top: 20px;\n  max-width: 375px;\n\n  /* Стилізація горизонтальної полоси прокрутки */\n  &::-webkit-scrollbar {\n    height: 8px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: blue;\n    border-radius: 6px;\n    width: 50px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: white;\n    border-radius: 6px;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const MovieItem = styled.li`\n  width: 100px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n`;\nexport const MovieWrapper = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 10px;\n  padding-top: 4px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  object-fit: cover;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport { defaultImageMovie } from 'service/defaultImages';\n\nimport {\n  ActorMoviesContainer,\n  MoviesList,\n  MovieItem,\n  MovieLink,\n  MovieWrapper,\n  MovieTitle,\n  MovieImage,\n} from './ActorMovies.styled';\n\nconst ActorMovies = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ActorMoviesContainer>\n      <MoviesList>\n        {movies.map(movie => {\n          const imageURL = `${BASE_URL}${movie.poster_path}`;\n          return (\n            <MovieItem key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MovieWrapper>\n                  <MovieImage\n                    src={movie.poster_path ? imageURL : defaultImageMovie}\n                    alt=\"movie-foto\"\n                    width=\"100\"\n                    height=\"195\"\n                  />\n                  <MovieTitle> {movie.title ?? movie.name}</MovieTitle>\n                </MovieWrapper>\n              </MovieLink>\n            </MovieItem>\n          );\n        })}\n      </MoviesList>\n    </ActorMoviesContainer>\n  );\n};\n\nexport default ActorMovies;\n","import styled from 'styled-components';\n\nexport const ActorImageContainer = styled.div`\n  overflow-x: auto;\n  margin-top: 20px;\n  max-width: 375px;\n\n  /* Стилізація горизонтальної полоси прокрутки */\n  &::-webkit-scrollbar {\n    height: 8px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: blue;\n    border-radius: 6px;\n    width: 50px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: white;\n    border-radius: 6px;\n  }\n`;\n\nexport const ImageList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ImageItem = styled.li`\n  width: 80px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 10px;\n  object-fit: cover;\n`;\n","import { BASE_URL } from 'pages/MovieDetailsPage';\nimport { defaultImageActor } from 'service/defaultImages';\n\nimport {\n  ActorImageContainer,\n  ImageList,\n  ImageItem,\n  Image,\n} from './ActorImages.styled';\n\nconst ActorImages = ({ images }) => {\n  return (\n    <ActorImageContainer>\n      <h2>Gallery</h2>\n      <ImageList>\n        {images.map((image, index) => {\n          const imageURL = `${BASE_URL}${image.file_path}`;\n          return (\n            <ImageItem key={index}>\n              <Image\n                src={image.file_path ? imageURL : defaultImageActor}\n                alt=\"actor-foto\"\n                width=\"80\"\n                height=\"150\"\n              />\n            </ImageItem>\n          );\n        })}\n      </ImageList>\n    </ActorImageContainer>\n  );\n};\n\nexport default ActorImages;\n","import { useState } from 'react';\nimport { defaultImageActor } from 'service/defaultImages';\nimport {\n  Container,\n  FotoContainer,\n  ActorFoto,\n  ActorDetails,\n  ActorDetailsTitle,\n  Gender,\n  Birthday,\n  BirthdayPlace,\n  OtherNames,\n  BiographyContainer,\n  ActorName,\n  Biography,\n  NoBiography,\n  Deathday,\n  InfoTitle,\n  InfoWrapper,\n  ActorInfoWrapper,\n} from './ActorInfo.styled';\nimport { ShowMoreButton } from 'components/Reviews/Reviews.styled';\nimport ActorMovies from 'components/ActorMovies/ActorMovies';\nimport ActorImages from 'components/ActorImages/ActorImages';\n\nconst ActorInfo = ({\n  profile_path,\n  gender,\n  birthday,\n  deathday,\n  place_of_birth,\n  also_known_as,\n  name,\n  biography,\n  personMovies,\n  personImages,\n}) => {\n  const [showFullText, setShowFullText] = useState(false);\n\n  let year = '';\n  if (birthday && deathday) {\n    const birthDate = new Date(birthday);\n    const deathDate = new Date(deathday);\n    year = deathDate.getFullYear() - birthDate.getFullYear();\n  } else if (birthday && !deathday) {\n    const birthDate = new Date(birthday);\n    year = new Date().getFullYear() - birthDate.getFullYear();\n  }\n\n  const getGenderString = gender => {\n    switch (gender) {\n      case 0:\n        return 'Not set / not specified';\n      case 1:\n        return 'Female';\n      case 2:\n        return 'Male';\n      case 3:\n        return 'Non-binary';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const handleShowMore = () => {\n    setShowFullText(!showFullText);\n  };\n\n  return (\n    <Container>\n      <FotoContainer>\n        <ActorFoto\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n              : defaultImageActor\n          }\n          alt=\"actor-foto\"\n          width=\"200\"\n          height=\"310\"\n        />\n\n        <ActorDetails>\n          <ActorDetailsTitle>Personal information</ActorDetailsTitle>\n\n          <InfoWrapper>\n            <InfoTitle>Gender</InfoTitle>\n            <Gender>{getGenderString(gender)}</Gender>\n          </InfoWrapper>\n\n          {birthday && (\n            <InfoWrapper>\n              <InfoTitle>Birthday</InfoTitle>\n              <Birthday>\n                {birthday} ({year} years old)\n              </Birthday>\n            </InfoWrapper>\n          )}\n\n          {deathday && (\n            <InfoWrapper>\n              <InfoTitle>Deathday</InfoTitle>\n              <Deathday>{deathday}</Deathday>\n            </InfoWrapper>\n          )}\n\n          {place_of_birth && (\n            <InfoWrapper>\n              <InfoTitle>Place of birth</InfoTitle>\n              <BirthdayPlace>{place_of_birth}</BirthdayPlace>\n            </InfoWrapper>\n          )}\n\n          {also_known_as && also_known_as.length > 0 && (\n            <InfoWrapper>\n              <InfoTitle>Also known as</InfoTitle>\n              <OtherNames>\n                {also_known_as.map((name, index) => (\n                  <li key={index}>{name}</li>\n                ))}\n              </OtherNames>\n            </InfoWrapper>\n          )}\n        </ActorDetails>\n      </FotoContainer>\n      <ActorInfoWrapper>\n        <ActorName>{name}</ActorName>\n        {biography ? (\n          <BiographyContainer>\n            <ActorDetailsTitle>Biography</ActorDetailsTitle>\n            <Biography>\n              {biography &&\n                (showFullText ? biography : `${biography.slice(0, 1000)}`)}\n            </Biography>\n            {biography && biography.length > 1000 && (\n              <ShowMoreButton onClick={handleShowMore}>\n                {showFullText ? 'Show Less' : 'Show More...'}\n              </ShowMoreButton>\n            )}\n          </BiographyContainer>\n        ) : (\n          <NoBiography>\n            Sorry, there is no information about this actor\n          </NoBiography>\n        )}\n        <ActorDetailsTitle>Known For</ActorDetailsTitle>\n        {personMovies && <ActorMovies movies={personMovies} />}\n        {personImages && <ActorImages images={personImages} />}\n      </ActorInfoWrapper>\n    </Container>\n  );\n};\n\nexport default ActorInfo;\n","import { useState, useEffect, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { getMovies } from 'service/api';\nimport ActorInfo from 'components/ActorInfo/ActorInfo';\nimport { Loader } from 'components/Loader/Loader';\nimport BackLink from 'components/BackLink/BackLink';\nimport { Container } from 'components/Container/Container.styled';\n\nconst ActorDetailsPage = () => {\n  const { personId } = useParams();\n  const [personInfo, setPersonInfo] = useState(null);\n  const [personMovies, setPersonMovies] = useState(null);\n  const [personImages, setPersonImages] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchActorInfo = async () => {\n      try {\n        setIsLoading(true);\n        const personData = await getMovies(`person/${personId}`);\n        setPersonInfo(personData);\n\n        const actorMovies = await getMovies(`person/${personId}/movie_credits`);\n        const actorMoviesAll = actorMovies.cast;\n        setPersonMovies(actorMoviesAll);\n\n        const actorImages = await getMovies(`person/${personId}/images`);\n        const actorImagesAll = actorImages.profiles;\n        setPersonImages(actorImagesAll);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchActorInfo();\n  }, [personId]);\n\n  const {\n    profile_path,\n    gender,\n    birthday,\n    deathday,\n    place_of_birth,\n    also_known_as,\n    name,\n    biography,\n  } = personInfo || {};\n\n  return (\n    <Container>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      <ActorInfo\n        profile_path={profile_path}\n        gender={gender}\n        birthday={birthday}\n        deathday={deathday}\n        place_of_birth={place_of_birth}\n        also_known_as={also_known_as}\n        name={name}\n        biography={biography}\n        personMovies={personMovies}\n        personImages={personImages}\n      />\n    </Container>\n  );\n};\n\nexport default ActorDetailsPage;\n","import styled from 'styled-components';\n\nexport const StyledMovieVideo = styled.div`\n  iframe {\n    width: 100%;\n    max-width: 560px;\n    height: auto;\n    margin-top: 30px;\n    border: 0;\n  }\n`;\n","import { StyledMovieVideo } from './MovieVideo.styled';\n\nconst MovieVideo = ({ name, videoKey }) => {\n  return (\n    <StyledMovieVideo>\n      <iframe\n        title={name}\n        src={`https://www.youtube.com/embed/${videoKey}`}\n        allowFullScreen\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n    </StyledMovieVideo>\n  );\n};\n\nexport default MovieVideo;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n  height: 300px;\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  // margin-top: 10px;\n  font-size: 16px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  text-shadow: 2px 2px 4px blue;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  text-shadow: 2px 2px 4px blue;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 14px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 16px;\n  text-shadow: 2px 2px 4px blue;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  font-size: 14px;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n  width: 100%;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 16px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  padding: 4px 10px;\n  border-radius: 10px;\n  font-size: 16px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: box-shadow 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n  }\n\n  &.active {\n    color: white;\n    box-shadow: 0 0 13px 3px blue;\n  }\n`;\n","import StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\nimport TheaterComedyOutlinedIcon from '@mui/icons-material/TheaterComedyOutlined';\nimport MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  Link,\n  ListItem,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n  DescriptionWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  firstOfficialTrailer,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n      </Wrapper>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <DescriptionWrapper>\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n        {firstOfficialTrailer && (\n          <MovieVideo\n            name={firstOfficialTrailer.name}\n            type={firstOfficialTrailer.type}\n            official={firstOfficialTrailer.official}\n            videoKey={firstOfficialTrailer.key}\n          />\n        )}\n      </DescriptionWrapper>\n\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <Link to=\"cast\">\n              <TheaterComedyOutlinedIcon\n                style={{ fontSize: '16px', marginRight: '4px' }}\n              />{' '}\n              Cast\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link to=\"reviews\">\n              <StarBorderOutlinedIcon\n                style={{ fontSize: '16px', marginRight: '4px' }}\n              />\n              Reviews\n            </Link>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { getMovies } from 'service/api';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\nimport { Container } from 'components/Container/Container.styled';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const findFirstOfficialTrailer = videos => {\n    return videos?.find(\n      video => video.type === 'Trailer' && video.official === true\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const filteredVideos = findFirstOfficialTrailer(videos);\n\n  return (\n    <Container>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          firstOfficialTrailer={filteredVideos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaultImageMovie\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaultImageMovie\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {});\n  return response.data;\n};\n\nconst getRequestToken = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}authentication/token/new`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    console.log(response);\n    return response.data.request_token;\n  } catch (error) {\n    console.error('Помилка при отриманні токену:', error);\n    throw error;\n  }\n};\n\nconst validateTokenWithLogin = async (username, password, requestToken) => {\n  try {\n    const response = await axios.post(\n      `${BASE_URL}authentication/token/validate_with_login`,\n      {\n        request_token: requestToken,\n      },\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    return response.data.session_id;\n  } catch (error) {\n    console.error('Помилка при авторизації токену:', error);\n    throw error;\n  }\n};\n\nexport { getMovies, getRequestToken, validateTokenWithLogin };\n","export const defaultImageMovie =\n  'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\nexport const defaultImageActor =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","_Fragment","_jsxs","GoArrowLeft","Container","ReviewsList","_templateObject2","ReviewsItem","_templateObject3","ReviewersName","_templateObject4","Review","_templateObject5","ShowMoreButton","_templateObject6","FotoContainer","ActorFoto","ActorDetails","ActorDetailsTitle","InfoWrapper","Gender","_templateObject7","Birthday","_templateObject8","Deathday","_templateObject9","BirthdayPlace","_templateObject10","OtherNames","_templateObject11","BiographyContainer","_templateObject12","ActorName","_templateObject13","Biography","_templateObject14","InfoTitle","_templateObject15","NoBiography","_templateObject16","ActorInfoWrapper","_templateObject17","ActorMoviesContainer","MoviesList","MovieItem","MovieLink","MovieWrapper","MovieTitle","MovieImage","movies","location","useLocation","map","movie","_movie$title","imageURL","concat","BASE_URL","poster_path","id","state","from","src","defaultImageMovie","alt","width","height","title","name","ActorImageContainer","ImageList","ImageItem","Image","images","image","index","file_path","defaultImageActor","profile_path","gender","birthday","deathday","place_of_birth","also_known_as","biography","personMovies","personImages","_useState","useState","_useState2","_slicedToArray","showFullText","setShowFullText","year","birthDate","Date","getFullYear","getGenderString","length","slice","onClick","ActorMovies","ActorImages","_location$state$from","_location$state","personId","useParams","personInfo","setPersonInfo","_useState3","_useState4","setPersonMovies","_useState5","_useState6","setPersonImages","_useState7","_useState8","isLoading","setIsLoading","BackLinkLocationRef","useRef","useEffect","fetchActorInfo","_asyncToGenerator","_regeneratorRuntime","_callee","personData","actorMovies","actorMoviesAll","actorImages","actorImagesAll","_context","prev","next","getMovies","sent","cast","profiles","t0","toast","finish","stop","apply","arguments","_ref2","BackLink","current","Loader","ActorInfo","StyledMovieVideo","videoKey","allowFullScreen","frameBorder","allow","Title","Wrapper","props","background","DescriptionContainer","DescriptionWrapper","UserScoreWrapper","UserScore","UserScoreValue","Overview","OverviewText","GenresWrapper","GenresTitle","Genres","InfoContainer","AdditionalInfo","List","ListItem","_templateObject18","NavLink","_templateObject19","backdrop_path","vote_average","overview","genres","release_date","firstOfficialTrailer","vote","toFixed","genre","MovieVideo","type","official","key","TheaterComedyOutlinedIcon","style","fontSize","marginRight","StarBorderOutlinedIcon","movieId","details","setDetails","videos","setVideos","fetchData","movieDetails","movieVideos","results","filteredVideos","find","video","findFirstOfficialTrailer","MovieInfo","_objectSpread","Suspense","fallback","Outlet","API_KEY","endpoint","response","_args","undefined","axios","abrupt","data","_x","getRequestToken","_callee2","_context2","params","api_key","console","log","request_token","error","validateTokenWithLogin","_ref3","_callee3","username","password","requestToken","_context3","session_id","_x2","_x3","_x4"],"sourceRoot":""}