{"version":3,"file":"static/js/46.3ddd06f9.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Container/Container.styled.jsx","components/Reviews/Reviews.styled.jsx","components/ActorInfo/ActorInfo.styled.jsx","components/ActorMovies/ActorMovies.styled.jsx","components/ActorMovies/ActorMovies.jsx","components/ActorInfo/ActorInfo.jsx","pages/ActorDetailsPage.jsx","components/MovieVideo/MovieVideo.styled.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","service/api.js","service/defaultImages.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 335px;\n  padding: 0 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n`;\n\nexport const ReviewsList = styled.ul`\n  padding-left: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 6px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border: 1px solid white;\n  border-radius: 10px;\n  padding: 16px;\n`;\n\nexport const ReviewersName = styled.h2`\n  font-size: 20px;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.5;\n  font-size: 14px;\n  text-align: justify;\n`;\n\nexport const ShowMoreButton = styled.button`\n  color: white;\n  font-size: 14px;\n  background-color: transparent;\n  border: none;\n  align-self: flex-end;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n  display: flex;\n  gap: 40px;\n  padding-top: 20px;\n`;\n\nexport const FotoContainer = styled.div`\n  margin-left: 10px;\n`;\n\nexport const ActorFoto = styled.img`\n  height: auto;\n  border-radius: 10px;\n`;\n\nexport const ActorDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ActorDetailsTitle = styled.h2`\n  margin: 0px;\n  font-size: 24px;\n  font-weight: bold;\n  padding-top: 12px;\n`;\n\nexport const InfoWrapper = styled.div``;\n\nexport const Gender = styled.div`\n  /* Your Gender styles here */\n`;\n\nexport const Birthday = styled.div`\n  /* Your Birthday styles here */\n`;\n\nexport const Deathday = styled.div``;\n\nexport const BirthdayPlace = styled.div`\n  /* Your BirthdayPlace styles here */\n`;\n\nexport const OtherNames = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const BiografyContainer = styled.div`\n  /* Your BiografyContainer styles here */\n`;\n\nexport const ActorName = styled.h1``;\n\nexport const Biografy = styled.p`\n  font-size: 16px;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin: 0;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const NoBiografy = styled.p`\n  font-size: 20px;\n`;\n\nexport const ActorInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ActorMoviesContainer = styled.div`\n  overflow-x: auto;\n  margin-top: 20px;\n  max-width: 1048px;\n\n  /* Стилізація горизонтальної полоси прокрутки */\n  &::-webkit-scrollbar {\n    height: 12px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: blue;\n    border-radius: 6px;\n    width: 300px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: white;\n    border-radius: 6px;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const MovieItem = styled.li`\n  width: 130px;\n\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n`;\nexport const MovieWrapper = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 12px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  object-fit: cover;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport { defaultImageMovie } from 'service/defaultImages';\n\nimport {\n  ActorMoviesContainer,\n  MoviesList,\n  MovieItem,\n  MovieLink,\n  MovieWrapper,\n  MovieTitle,\n  MovieImage,\n} from './ActorMovies.styled';\n\nconst ActorMovies = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ActorMoviesContainer>\n      <MoviesList>\n        {movies.map(movie => {\n          const imageURL = `${BASE_URL}${movie.poster_path}`;\n          return (\n            <MovieItem key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MovieWrapper>\n                  <MovieImage\n                    src={movie.poster_path ? imageURL : defaultImageMovie}\n                    alt=\"movie-foto\"\n                    width=\"130\"\n                    height=\"195\"\n                  />\n                  <MovieTitle> {movie.title ?? movie.name}</MovieTitle>\n                </MovieWrapper>\n              </MovieLink>\n            </MovieItem>\n          );\n        })}\n      </MoviesList>\n    </ActorMoviesContainer>\n  );\n};\n\nexport default ActorMovies;\n","import { useState } from 'react';\nimport { defaultImageActor } from 'service/defaultImages';\nimport {\n  Container,\n  FotoContainer,\n  ActorFoto,\n  ActorDetails,\n  ActorDetailsTitle,\n  Gender,\n  Birthday,\n  BirthdayPlace,\n  OtherNames,\n  BiografyContainer,\n  ActorName,\n  Biografy,\n  NoBiografy,\n  Deathday,\n  InfoTitle,\n  InfoWrapper,\n  ActorInfoWrapper,\n} from './ActorInfo.styled';\nimport { ShowMoreButton } from 'components/Reviews/Reviews.styled';\nimport ActorMovies from 'components/ActorMovies/ActorMovies';\n\nconst ActorInfo = ({\n  profile_path,\n  gender,\n  birthday,\n  deathday,\n  place_of_birth,\n  also_known_as,\n  name,\n  biography,\n  personMovies,\n}) => {\n  const [showFullText, setShowFullText] = useState(false);\n\n  let year = '';\n  if (birthday && deathday) {\n    const birthDate = new Date(birthday);\n    const deathDate = new Date(deathday);\n    year = deathDate.getFullYear() - birthDate.getFullYear();\n  } else if (birthday && !deathday) {\n    const birthDate = new Date(birthday);\n    year = new Date().getFullYear() - birthDate.getFullYear();\n  }\n\n  const getGenderString = gender => {\n    switch (gender) {\n      case 0:\n        return 'Not set / not specified';\n      case 1:\n        return 'Female';\n      case 2:\n        return 'Male';\n      case 3:\n        return 'Non-binary';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const handleShowMore = () => {\n    setShowFullText(!showFullText);\n  };\n\n  return (\n    <Container>\n      <FotoContainer>\n        <ActorFoto\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n              : defaultImageActor\n          }\n          alt=\"actor-foto\"\n          width=\"300\"\n          height=\"450\"\n        />\n\n        <ActorDetails>\n          <ActorDetailsTitle>Personal information</ActorDetailsTitle>\n\n          <InfoWrapper>\n            <InfoTitle>Gender</InfoTitle>\n            <Gender>{getGenderString(gender)}</Gender>\n          </InfoWrapper>\n\n          {birthday && (\n            <InfoWrapper>\n              <InfoTitle>Birthday</InfoTitle>\n              <Birthday>\n                {birthday} ({year} years old)\n              </Birthday>\n            </InfoWrapper>\n          )}\n\n          {deathday && (\n            <InfoWrapper>\n              <InfoTitle>Deathday</InfoTitle>\n              <Deathday>{deathday}</Deathday>\n            </InfoWrapper>\n          )}\n\n          {place_of_birth && (\n            <InfoWrapper>\n              <InfoTitle>Place of birth</InfoTitle>\n              <BirthdayPlace>{place_of_birth}</BirthdayPlace>\n            </InfoWrapper>\n          )}\n\n          {also_known_as && also_known_as.length > 0 && (\n            <InfoWrapper>\n              <InfoTitle>Also known as</InfoTitle>\n              <OtherNames>\n                {also_known_as.map((name, index) => (\n                  <li key={index}>{name}</li>\n                ))}\n              </OtherNames>\n            </InfoWrapper>\n          )}\n        </ActorDetails>\n      </FotoContainer>\n      <ActorInfoWrapper>\n        <ActorName>{name}</ActorName>\n        {biography ? (\n          <BiografyContainer>\n            <ActorDetailsTitle>Biografy</ActorDetailsTitle>\n            <Biografy>\n              {biography &&\n                (showFullText ? biography : `${biography.slice(0, 1000)}`)}\n            </Biografy>\n            {biography && biography.length > 1000 && (\n              <ShowMoreButton onClick={handleShowMore}>\n                {showFullText ? 'Show Less' : 'Show More...'}\n              </ShowMoreButton>\n            )}\n          </BiografyContainer>\n        ) : (\n          <NoBiografy>\n            Sorry, there is no information about this actor\n          </NoBiografy>\n        )}\n        <ActorDetailsTitle>Known For</ActorDetailsTitle>\n        {personMovies && <ActorMovies movies={personMovies} />}\n      </ActorInfoWrapper>\n    </Container>\n  );\n};\n\nexport default ActorInfo;\n","import { useState, useEffect, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport ActorInfo from 'components/ActorInfo/ActorInfo';\nimport { Loader } from 'components/Loader/Loader';\nimport BackLink from 'components/BackLink/BackLink';\nimport { Container } from 'components/Container/Container.styled';\n\nconst ActorDetailsPage = () => {\n  const { personId } = useParams();\n  const [personInfo, setPersonInfo] = useState(null);\n  const [personMovies, setPersonMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchActorInfo = async () => {\n      try {\n        setIsLoading(true);\n        const personData = await getMovies(`person/${personId}`);\n\n        const actorMovies = await getMovies(`person/${personId}/movie_credits`);\n        console.log(actorMovies);\n        const actorMoviesAll = actorMovies.cast;\n        setPersonInfo(personData);\n        setPersonMovies(actorMoviesAll);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchActorInfo();\n  }, [personId]);\n\n  const {\n    profile_path,\n    gender,\n    birthday,\n    deathday,\n    place_of_birth,\n    also_known_as,\n    name,\n    biography,\n  } = personInfo || {};\n\n  return (\n    <Container>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      <ActorInfo\n        profile_path={profile_path}\n        gender={gender}\n        birthday={birthday}\n        deathday={deathday}\n        place_of_birth={place_of_birth}\n        also_known_as={also_known_as}\n        name={name}\n        biography={biography}\n        personMovies={personMovies}\n      />\n    </Container>\n  );\n};\n\nexport default ActorDetailsPage;\n","import styled from 'styled-components';\n\nexport const StyledMovieVideo = styled.div`\n  iframe {\n    width: 560px;\n    height: 315px;\n    margin-top: 30px;\n    border: 0;\n  }\n`;\n","import { StyledMovieVideo } from './MovieVideo.styled';\n\nconst MovieVideo = ({ name, videoKey }) => {\n  return (\n    <StyledMovieVideo>\n      <iframe\n        title={name}\n        src={`https://www.youtube.com/embed/${videoKey}`}\n        allowFullScreen\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n    </StyledMovieVideo>\n  );\n};\n\nexport default MovieVideo;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 350px;\n  height: 520px;\n\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n  DescriptionWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  videos,\n  firstOfficialTrailer,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n      </Wrapper>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <DescriptionWrapper>\n        {' '}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n        {firstOfficialTrailer && (\n          <MovieVideo\n            name={firstOfficialTrailer.name}\n            type={firstOfficialTrailer.type}\n            official={firstOfficialTrailer.official}\n            videoKey={firstOfficialTrailer.key}\n          />\n        )}\n      </DescriptionWrapper>\n\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { defaultImageMovie } from 'service/defaultImages';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\nimport { Container } from 'components/Container/Container.styled';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const findFirstOfficialTrailer = videos => {\n    return videos?.find(\n      video => video.type === 'Trailer' && video.official === true\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const filteredVideos = findFirstOfficialTrailer(videos);\n\n  return (\n    <Container>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          firstOfficialTrailer={filteredVideos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaultImageMovie\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaultImageMovie\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n","export const defaultImageMovie =\n  'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\nexport const defaultImageActor =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","_Fragment","_jsxs","GoArrowLeft","Container","ReviewsList","_templateObject2","ReviewsItem","_templateObject3","ReviewersName","_templateObject4","Review","_templateObject5","ShowMoreButton","_templateObject6","FotoContainer","ActorFoto","ActorDetails","ActorDetailsTitle","InfoWrapper","Gender","_templateObject7","Birthday","_templateObject8","Deathday","_templateObject9","BirthdayPlace","_templateObject10","OtherNames","_templateObject11","BiografyContainer","_templateObject12","ActorName","_templateObject13","Biografy","_templateObject14","InfoTitle","_templateObject15","NoBiografy","_templateObject16","ActorInfoWrapper","_templateObject17","ActorMoviesContainer","MoviesList","MovieItem","MovieLink","MovieWrapper","MovieTitle","MovieImage","movies","location","useLocation","map","movie","_movie$title","imageURL","concat","BASE_URL","poster_path","id","state","from","src","defaultImageMovie","alt","width","height","title","name","profile_path","gender","birthday","deathday","place_of_birth","also_known_as","biography","personMovies","_useState","useState","_useState2","_slicedToArray","showFullText","setShowFullText","year","birthDate","Date","getFullYear","defaultImageActor","getGenderString","length","index","slice","onClick","ActorMovies","_location$state$from","_location$state","personId","useParams","personInfo","setPersonInfo","_useState3","_useState4","setPersonMovies","_useState5","_useState6","isLoading","setIsLoading","BackLinkLocationRef","useRef","useEffect","fetchActorInfo","_asyncToGenerator","_regeneratorRuntime","_callee","personData","actorMovies","actorMoviesAll","_context","prev","next","getMovies","sent","console","log","cast","t0","toast","finish","stop","apply","arguments","_ref2","BackLink","current","Loader","ActorInfo","StyledMovieVideo","videoKey","allowFullScreen","frameBorder","allow","Title","Wrapper","props","background","Image","DescriptionContainer","DescriptionWrapper","UserScoreWrapper","UserScore","UserScoreValue","Overview","OverviewText","GenresWrapper","GenresTitle","Genres","InfoContainer","AdditionalInfo","List","ListItem","_templateObject18","_templateObject19","backdrop_path","vote_average","overview","genres","release_date","firstOfficialTrailer","videos","vote","toFixed","genre","MovieVideo","type","official","key","movieId","details","setDetails","setVideos","fetchData","movieDetails","movieVideos","results","filteredVideos","find","video","findFirstOfficialTrailer","MovieInfo","_objectSpread","Suspense","fallback","Outlet","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}