{"version":3,"file":"static/js/310.5151f9e9.chunk.js","mappings":"gNAGaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAItBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yBAIhBG,EAAYL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kCAIrBK,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,qH,SCMrC,EAnBmB,SAAHQ,GAAoB,IAAdC,EAAMD,EAANC,OACpB,OACEC,EAAAA,EAAAA,KAACb,EAAS,CAAAc,UACRD,EAAAA,EAAAA,KAACT,EAAI,CAAAU,SACFF,EAAOG,KAAI,SAAAC,GAAwC,IAArCC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aACxBC,EAAOD,EAAe,IAAIE,KAAKF,GAAcG,cAAgB,GACnE,OACEV,EAAAA,EAAAA,KAACP,EAAS,CAAAQ,UACRU,EAAAA,EAAAA,MAAChB,EAAS,CAACiB,GAAE,WAAAC,OAAaT,GAAKH,SAAA,CACvB,OAALK,QAAK,IAALA,EAAAA,EAASD,EAAK,KAAGG,EAAK,QAFXJ,EAMpB,OAIR,C,oLCjBaU,EAAgB1B,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yEAM1ByB,EAAO3B,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kEAMlB0B,EAAQ5B,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,QAEpB2B,EAAQ7B,EAAAA,GAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,mIAWpB4B,EAAS9B,EAAAA,GAAAA,OAAa+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,qP,SCPnC,EAlBmB,SAAHQ,GAAuC,IAAjCsB,EAAKtB,EAALsB,MAAOC,EAAQvB,EAARuB,SAAUC,EAAQxB,EAARwB,SACrC,OACEtB,EAAAA,EAAAA,KAACc,EAAa,CAAAb,UACZU,EAAAA,EAAAA,MAACI,EAAI,CAACM,SAAUA,EAASpB,SAAA,EACvBD,EAAAA,EAAAA,KAACgB,EAAK,KACNhB,EAAAA,EAAAA,KAACiB,EAAK,CACJM,KAAK,OACLlB,KAAK,SACLmB,MAAOJ,EACPE,SAAUA,EACVG,YAAY,6BAEdzB,EAAAA,EAAAA,KAACkB,EAAM,CAACK,KAAK,SAAQtB,SAAC,eAI9B,E,8BC4CA,EApDmB,WACjB,IAAAyB,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BN,EAAKQ,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA8CT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAkCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,GAAuBC,EAAAA,EAAAA,cAAWC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElB,OAFkBF,EAAAC,KAAA,EAErCZ,GAAa,GAAMW,EAAAE,KAAA,GACMC,EAAAA,EAAAA,GAAU,eAAgB,CAAErC,MAAAA,IAAS,KAAD,EAAvDiC,EAAUC,EAAAI,KAChBnB,EAAmBc,EAAWM,SAC9BhB,GAAa,GAAOW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEpBP,EAAS,2BACTc,EAAAA,GAAAA,MAAYP,EAAAM,GAAME,SAAS,QAEP,OAFOR,EAAAC,KAAA,GAE3BZ,GAAa,GAAOW,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,wBAErB,CAAChC,KAEJ6C,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAchC,EAAaiC,IAAI,UACjCD,GAAapC,EAASoC,EAC5B,GAAG,CAAChC,IAcJ,OACEvB,EAAAA,EAAAA,MAAAyD,EAAAA,SAAA,CAAAnE,SAAA,EACED,EAAAA,EAAAA,KAACqE,EAAU,CACTjD,MAAOA,EACPC,SAXe,SAAAiD,GAEnB,GADAA,EAAMC,kBACDnD,EAAO,OAAOe,EAAgB,CAAC,GACpCA,EAAgB,CAAEqC,OAAQpD,IAC1B4B,GACF,EAOM1B,SAjBe,SAAHnB,GAA+B,IAAfqB,EAAKrB,EAAfsE,OAAUjD,MAC3BA,GAAOW,EAAgB,CAAC,GAC7BL,EAASN,EACX,IAgBKkB,IAAa1C,EAAAA,EAAAA,KAAC0E,EAAAA,EAAM,IACpB5B,IAASnC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,CAAG,UAAQ6C,EAAMgB,YACzBpB,IAAcI,IAAS9C,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,CAAC5E,OAAQuC,MAGnD,C,4EC1DMsC,EAAU,mCACHC,EAAW,gCAElBpB,EAAS,eAAA3D,GAAAoD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAO0B,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAA/B,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAa,OAAXuB,EAAME,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAC3B,EAAAE,KAAA,EACrB6B,EAAAA,EAAAA,IAAU,GAADxE,OAAIgE,GAAQhE,OAAGiE,GAAY,CACzDC,QAAMO,EAAAA,EAAAA,GAAA,CACJC,QAASX,GACNG,KAEJ,KAAD,EALY,OAARC,EAAQ1B,EAAAI,KAAAJ,EAAAkC,OAAA,SAMPR,EAASS,MAAI,wBAAAnC,EAAAU,OAAA,GAAAZ,EAAA,KACrB,gBARcsC,GAAA,OAAA5F,EAAA6F,MAAA,KAAAT,UAAA,KAUf,K","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 18px;\n  font-weight: bold;\n  color: blue;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { Container, List, MovieItem, MovieLink } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <Container>\n      <List>\n        {movies.map(({ id, name, title, release_date }) => {\n          const year = release_date ? new Date(release_date).getFullYear() : '';\n          return (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`}>\n                {title ?? name} ({year})\n              </MovieLink>\n            </MovieItem>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  padding: 8px;\n  width: 350px;\n\n  &:hover,\n  &:focus,\n  &:not(:placeholder-shown) {\n    border-color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  background-color: #f5f5f5;\n  border: 1px solid #383838;\n  height: 35px;\n  width: 100px;\n  border-radius: 2px;\n  color: black;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #c8c8c8;\n  }\n`;\n","import { FormContainer, Form, Label, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ query, onSubmit, onChange }) => {\n  return (\n    <FormContainer>\n      <Form onSubmit={onSubmit}>\n        <Label></Label>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          value={query}\n          onChange={onChange}\n          placeholder=\"Enter text to search...\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport getMovies from 'service/api';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesByKeyword, setMoviesByKeyword] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchMoviesByKeyword = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const moviesData = await getMovies('search/movie', { query });\n      setMoviesByKeyword(moviesData.results);\n      setIsLoading(false);\n    } catch (error) {\n      setError('Something went wrong!!!');\n      toast.error(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    const searchValue = searchParams.get('search');\n    if (searchValue) setQuery(searchValue);\n  }, [searchParams]);\n\n  const handleChange = ({ target: { value } }) => {\n    if (!value) setSearchParams({});\n    setQuery(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!query) return setSearchParams({});\n    setSearchParams({ search: query });\n    fetchMoviesByKeyword();\n  };\n\n  return (\n    <>\n      <SearchForm\n        query={query}\n        onSubmit={handleSubmit}\n        onChange={handleChange}\n      />\n      {isLoading && <Loader />}\n      {error && <p>Error: {error.message}</p>}\n      {!isLoading && !error && <MoviesList movies={moviesByKeyword} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","MovieItem","_templateObject3","MovieLink","Link","_templateObject4","_ref","movies","_jsx","children","map","_ref2","id","name","title","release_date","year","Date","getFullYear","_jsxs","to","concat","FormContainer","Form","Label","Input","Button","_templateObject5","query","onSubmit","onChange","type","value","placeholder","_useState","useState","_useState2","_slicedToArray","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","moviesByKeyword","setMoviesByKeyword","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","fetchMoviesByKeyword","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","moviesData","_context","prev","next","getMovies","sent","results","t0","toast","message","finish","stop","useEffect","searchValue","get","_Fragment","SearchForm","event","preventDefault","search","target","Loader","MoviesList","API_KEY","BASE_URL","endpoint","params","response","_args","arguments","length","undefined","axios","_objectSpread","api_key","abrupt","data","_x","apply"],"sourceRoot":""}