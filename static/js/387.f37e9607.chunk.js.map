{"version":3,"file":"static/js/387.f37e9607.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const ReviewsList = styled.ul``;\n\nexport const ReviewsItem = styled.li``;\n\nexport const ReviewersName = styled.h2`\n  font-size: 20px;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.5;\n  font-size: 14px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Container,\n  ReviewsList,\n  ReviewsItem,\n  ReviewersName,\n  Review,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        setError('');\n        const fetchData = await getMovies(`movie/${movieId}/reviews`);\n        console.log(fetchData.results);\n        setReviews(fetchData.results);\n\n        console.log(fetchData.results.name);\n      } catch (error) {\n        setError('Something went wrong!!!');\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchReviews();\n    }\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {error && <p>Error</p>}\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(review => (\n            <ReviewsItem key={review.id}>\n              <ReviewersName>{review.author}</ReviewersName>\n              <Review>{review.content}</Review>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      ) : (\n        <p>We don&#x27;t have any reviews for this movie.</p>\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ReviewsList","_templateObject2","ReviewsItem","_templateObject3","ReviewersName","_templateObject4","Review","_templateObject5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","fetchData","_context","prev","next","getMovies","concat","sent","console","log","results","name","t0","toast","message","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","length","map","review","author","content","id","API_KEY","BASE_URL","endpoint","params","response","_args","undefined","axios","_objectSpread","api_key","abrupt","data","_x"],"sourceRoot":""}