{"version":3,"file":"static/js/736.aa08a92a.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/MovieInfo/MovieInfo.styled.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin: 10px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  margin-bottom: 10px;\n  border: 1px solid white;\n  border-radius: 10px;\n  padding-bottom: 20px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nexport const ProfileImage = styled.img`\n  width: 200px;\n  height: 270px;\n  margin-bottom: 8px;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const ActorName = styled.h2`\n  font-size: 18px;\n  text-align: center;\n  color: white;\n`;\n\nexport const CharacterName = styled.p`\n  font-size: 14px;\n  color: white;\n  text-align: center;\n  max-width: 200px;\n  padding: 4px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport getMovies from 'service/api';\n\nimport {\n  ActorName,\n  CastItem,\n  CharacterName,\n  Container,\n  List,\n  ProfileImage,\n} from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { StyledLink } from 'components/MovieInfo/MovieInfo.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      try {\n        setIsLoading(true);\n\n        const actorInfo = await getMovies(`movie/${movieId}/credits`);\n\n        if (actorInfo.cast.length === 0) {\n          toast.warn('Sorry, there is no information about the cast.');\n        }\n\n        setCast(actorInfo.cast);\n        console.log(actorInfo.cast);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchCast();\n    }\n  }, [movieId]);\n\n  const defaulImage =\n    'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png';\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n\n      {cast && (\n        <List>\n          {cast.map(person => (\n            <StyledLink key={person.id} to={`/person/${person.id}`}>\n              <CastItem>\n                <ProfileImage\n                  src={\n                    person.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${person.profile_path}`\n                      : defaulImage\n                  }\n                  alt=\"profile-foto\"\n                />\n\n                <ActorName>{person.name}</ActorName>\n                <CharacterName>{person.character}</CharacterName>\n              </CastItem>\n            </StyledLink>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 450px;\n  height: auto;\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","CastItem","_templateObject3","ProfileImage","_templateObject4","ActorName","_templateObject5","CharacterName","_templateObject6","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","actorInfo","_context","prev","next","getMovies","concat","sent","length","toast","console","log","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","person","StyledLink","to","id","src","profile_path","alt","name","character","Title","Wrapper","props","background","Image","DescriptionContainer","UserScoreWrapper","UserScore","_templateObject7","UserScoreValue","_templateObject8","Overview","_templateObject9","OverviewText","_templateObject10","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","_templateObject16","ListItem","_templateObject17","Link","_templateObject18","API_KEY","BASE_URL","endpoint","params","response","_args","undefined","axios","_objectSpread","api_key","abrupt","data","_x"],"sourceRoot":""}