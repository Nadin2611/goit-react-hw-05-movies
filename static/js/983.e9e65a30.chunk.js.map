{"version":3,"file":"static/js/983.e9e65a30.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetailsPage.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 450px;\n  height: auto;\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  width: 250px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 18px;\n  color: white;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n  }\n`;\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieRating = styled.div`\n  background-color: blue;\n  width: 40px;\n  height: 40px;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: -16px;\n  left: 10px;\n`;\n\nexport const MovieWrapper = styled.div`\n  position: relative;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const MovieYear = styled.p`\n  font-size: 14px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport {\n  Container,\n  List,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieRating,\n  MovieWrapper,\n  MovieInfoWrapper,\n  MovieTitle,\n  MovieYear,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {movies.map(\n          ({ id, name, title, release_date, poster_path, vote_average }) => {\n            const year = release_date\n              ? new Date(release_date).getFullYear()\n              : '';\n            const vote = (vote_average * 10).toFixed();\n            const imageURL = `${BASE_URL}${poster_path}`;\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieWrapper>\n                    {poster_path && (\n                      <MovieImage\n                        src={imageURL}\n                        alt=\"movie-foto\"\n                        width=\"250\"\n                        height=\"380\"\n                      />\n                    )}\n                    <MovieRating>{vote}%</MovieRating>\n                  </MovieWrapper>\n                  <MovieInfoWrapper>\n                    <MovieTitle> {title ?? name}</MovieTitle>\n                    <MovieYear>({year})</MovieYear>\n                  </MovieInfoWrapper>\n                </MovieLink>\n              </MovieItem>\n            );\n          }\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport getMovies from 'service/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const trendingData = await getMovies('trending/movie/week');\n\n        setTrendingMovies(trendingData.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error.message);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <div>\n        <MoviesList movies={trendingMovies} />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n        </DescriptionContainer>\n      </Wrapper>\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const defaulImage =\n    'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaulImage\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaulImage\n          }\n        />\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Wrapper","_templateObject3","props","background","concat","Image","_templateObject4","DescriptionContainer","_templateObject5","UserScoreWrapper","_templateObject6","UserScore","_templateObject7","UserScoreValue","_templateObject8","Overview","_templateObject9","OverviewText","_templateObject10","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","List","_templateObject16","ListItem","_templateObject17","StyledLink","Link","_templateObject18","MovieItem","MovieLink","MovieImage","MovieRating","MovieWrapper","MovieTitle","MovieYear","MovieInfoWrapper","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","name","title","release_date","poster_path","vote_average","year","Date","getFullYear","vote","toFixed","imageURL","BASE_URL","_jsxs","to","state","from","src","alt","width","height","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","useEffect","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","trendingData","_context","prev","next","getMovies","sent","results","t0","console","error","message","stop","apply","arguments","MoviesList","backdrop_path","overview","genres","length","genre","_Fragment","GoArrowLeft","_location$state$from","_location$state","movieId","useParams","details","setDetails","_useState3","_useState4","isLoading","setIsLoading","BackLinkLocationRef","useRef","fetchData","movieDetails","toast","finish","defaulImage","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","fallback","Outlet","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}