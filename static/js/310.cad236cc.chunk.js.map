{"version":3,"file":"static/js/310.cad236cc.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 18px;\n  font-weight: bold;\n  color: blue;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Container, List, MovieItem, MovieLink } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {movies.map(({ id, name, title, release_date }) => {\n          const year = release_date ? new Date(release_date).getFullYear() : '';\n          return (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                {title ?? name} ({year})\n              </MovieLink>\n            </MovieItem>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  padding: 8px;\n  width: 350px;\n\n  &:hover,\n  &:focus,\n  &:not(:placeholder-shown) {\n    border-color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  background-color: #f5f5f5;\n  border: 1px solid #383838;\n  height: 35px;\n  width: 100px;\n  border-radius: 2px;\n  color: black;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #c8c8c8;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { FormContainer, Form, Label, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit, onChange }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('search') ?? '';\n\n  const handleChange = event => {\n    const newQuery = event.target.value;\n    setSearchParams({ search: newQuery });\n    onChange(newQuery);\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={onSubmit}>\n        <Label></Label>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          value={query}\n          onChange={handleChange}\n          placeholder=\"Enter text to search...\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport getMovies from 'service/api';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesByKeyword, setMoviesByKeyword] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchMoviesByKeyword = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const moviesData = await getMovies('search/movie', { query });\n\n      if (moviesData.results.length === 0) {\n        toast.warn(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      } else {\n        toast.info(\n          `Found ${moviesData.results.length} ${\n            moviesData.results.length === 1 ? 'movie' : 'movies'\n          }.`\n        );\n      }\n\n      setMoviesByKeyword(moviesData.results);\n      setIsLoading(false);\n    } catch (error) {\n      toast.error('Something went wrong!!!');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    const searchValue = searchParams.get('search');\n    if (searchValue) setQuery(searchValue);\n  }, [searchParams]);\n\n  const handleChange = value => {\n    if (!value) setSearchParams({});\n    setQuery(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.warn('Please enter text!');\n    } else {\n      setSearchParams({ search: query });\n      fetchMoviesByKeyword();\n    }\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} onChange={handleChange} />\n      {isLoading && <Loader />}\n\n      {!isLoading && <MoviesList movies={moviesByKeyword} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","MovieItem","_templateObject3","MovieLink","Link","_templateObject4","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","name","title","release_date","year","Date","getFullYear","_jsxs","to","concat","state","from","FormContainer","Form","Label","Input","Button","_templateObject5","_searchParams$get","onSubmit","onChange","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","type","value","event","newQuery","target","search","placeholder","_useState","useState","_useState2","setQuery","_useState3","_useState4","moviesByKeyword","setMoviesByKeyword","_useState5","_useState6","isLoading","setIsLoading","fetchMoviesByKeyword","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","moviesData","_context","prev","next","getMovies","sent","results","length","toast","t0","finish","stop","useEffect","searchValue","_Fragment","SearchForm","preventDefault","trim","Loader","MoviesList","API_KEY","BASE_URL","endpoint","params","response","_args","arguments","undefined","axios","_objectSpread","api_key","abrupt","data","_x","apply"],"sourceRoot":""}