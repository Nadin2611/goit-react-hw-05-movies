{"version":3,"file":"static/js/310.d0bbde9a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MovieVideo/MovieVideo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetailsPage.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px;\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  width: 250px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 18px;\n  color: white;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n  }\n`;\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieRating = styled.div`\n  background-color: blue;\n  width: 40px;\n  height: 40px;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: -16px;\n  left: 10px;\n`;\n\nexport const MovieWrapper = styled.div`\n  position: relative;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const MovieYear = styled.p`\n  font-size: 14px;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BASE_URL } from 'pages/MovieDetailsPage';\nimport {\n  Container,\n  List,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieRating,\n  MovieWrapper,\n  MovieInfoWrapper,\n  MovieTitle,\n  MovieYear,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <List>\n        {movies.map(\n          ({ id, name, title, release_date, poster_path, vote_average }) => {\n            const year = release_date\n              ? new Date(release_date).getFullYear()\n              : '';\n            const vote = (vote_average * 10).toFixed();\n            const imageURL = `${BASE_URL}${poster_path}`;\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieWrapper>\n                    {poster_path && (\n                      <MovieImage\n                        src={imageURL}\n                        alt=\"movie-foto\"\n                        width=\"250\"\n                        height=\"380\"\n                      />\n                    )}\n                    <MovieRating>{vote}%</MovieRating>\n                  </MovieWrapper>\n                  <MovieInfoWrapper>\n                    <MovieTitle> {title ?? name}</MovieTitle>\n                    <MovieYear>({year})</MovieYear>\n                  </MovieInfoWrapper>\n                </MovieLink>\n              </MovieItem>\n            );\n          }\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","const MovieVideo = ({ name, videoKey }) => {\n  return (\n    <div>\n      <iframe\n        title={name}\n        width=\"560\"\n        height=\"315\"\n        src={`https://www.youtube.com/embed/${videoKey}`}\n        allowFullScreen\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n    </div>\n  );\n};\n\nexport default MovieVideo;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  padding: 30px;\n  border-radius: 10px;\n  background: linear-gradient(\n      to right,\n      rgba(31.5, 31.5, 31.5, 0.8) 20%,\n      rgba(31.5, 31.5, 31.5, 0) 50%\n    ),\n    ${props => (props.background ? `url(${props.background})` : 'none')};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Image = styled.img`\n  width: 350px;\n  height: 520px;\n\n  border-radius: 10px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const UserScoreWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-weight: bold;\n`;\n\nexport const UserScoreValue = styled.p``;\n\nexport const Overview = styled.p`\n  margin-bottom: 4px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const GenresWrapper = styled.div``;\n\nexport const GenresTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n  padding-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 24px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import MovieVideo from 'components/MovieVideo/MovieVideo';\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Image,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  InfoContainer,\n  AdditionalInfo,\n  List,\n  ListItem,\n  StyledLink,\n  DescriptionContainer,\n  UserScoreValue,\n  UserScoreWrapper,\n  GenresTitle,\n  GenresWrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  title,\n  name,\n  poster_path,\n  backdrop_path,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n  videos,\n  firstOfficialTrailer,\n}) => {\n  let year = '';\n  if (release_date) {\n    const date = new Date(release_date);\n    year = date.getFullYear();\n  }\n\n  const vote = (vote_average * 10).toFixed();\n\n  return (\n    <Container>\n      <Title>\n        {title ?? name} {year && `(${year})`}\n      </Title>\n      <Wrapper background={backdrop_path}>\n        {poster_path && (\n          <Image src={poster_path} alt=\"movie-foto\" width=\"100\" height=\"100\" />\n        )}\n        <DescriptionContainer>\n          <UserScoreWrapper>\n            <UserScore>User Score: </UserScore>\n            <UserScoreValue>{vote}%</UserScoreValue>\n          </UserScoreWrapper>\n          <Overview>Overview: </Overview>\n          <OverviewText>{overview}</OverviewText>\n          <GenresWrapper>\n            <GenresTitle>Genres:</GenresTitle>\n            {genres && genres.length > 0 && (\n              <Genres>\n                {genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genres>\n            )}\n          </GenresWrapper>\n\n          {firstOfficialTrailer && (\n            <MovieVideo\n              name={firstOfficialTrailer.name}\n              type={firstOfficialTrailer.type}\n              official={firstOfficialTrailer.official}\n              videoKey={firstOfficialTrailer.key}\n            />\n          )}\n        </DescriptionContainer>\n      </Wrapper>\n      <InfoContainer>\n        <AdditionalInfo></AdditionalInfo>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  padding: 10px 20px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { GoArrowLeft } from 'react-icons/go';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <StyledLink to={to}>\n        <GoArrowLeft />\n        {children}\n      </StyledLink>\n    </>\n  );\n};\n\nexport default BackLink;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport getMovies from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const findFirstOfficialTrailer = videos => {\n    return videos?.find(\n      video => video.type === 'Trailer' && video.official === true\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovies(`movie/${movieId}`);\n\n        setDetails(movieDetails);\n\n        const movieVideos = await getMovies(`movie/${movieId}/videos`);\n        setVideos(movieVideos.results);\n\n        console.log(movieVideos.results);\n      } catch (error) {\n        toast.error('Something went wrong!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  const defaulImage =\n    'https://images.pexels.com/photos/6177645/pexels-photo-6177645.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n\n  const filteredVideos = findFirstOfficialTrailer(videos);\n\n  return (\n    <div>\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {details && (\n        <MovieInfo\n          {...details}\n          videos={videos}\n          firstOfficialTrailer={filteredVideos}\n          poster_path={\n            details.poster_path\n              ? `${BASE_URL}${details.poster_path}`\n              : defaulImage\n          }\n          backdrop_path={\n            details.backdrop_path\n              ? `${BASE_URL}${details.backdrop_path}`\n              : defaulImage\n          }\n        />\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  width: 600px;\n  color: white;\n  border-radius: 18px;\n  border: none;\n  font-size: 20px;\n  background-color: transparent;\n  border: 2px solid white;\n  transition: border-color 0.3s;\n\n  &:hover,\n  &:focus,\n  &:not(:placeholder-shown) {\n    font-size: 20px;\n    border-color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  border-radius: 18px;\n  font-size: 20px;\n  text-decoration: none;\n  background-color: white;\n  color: blue;\n  font-weight: 500;\n  border: none;\n  position: absolute;\n  right: 1px;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { FormContainer, Form, Label, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('search') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.search.value.trim().toLowerCase();\n    if (!query) {\n      return toast.warn('Please enter text!');\n    } else {\n      setSearchParams({ search: query });\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            defaultValue={query}\n            placeholder=\"Enter movie to search...\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </Label>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport getMovies from 'service/api';\n\nconst MoviesPage = () => {\n  const [searchParams] = useSearchParams();\n  const [moviesByKeyword, setMoviesByKeyword] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('search') ?? '';\n\n  const fetchMoviesByKeyword = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const moviesData = await getMovies('search/movie', { query });\n\n      if (moviesData.results.length === 0) {\n        toast.warn(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      } else {\n        toast.info(\n          `Found ${moviesData.results.length} ${\n            moviesData.results.length === 1 ? 'movie' : 'movies'\n          }.`\n        );\n      }\n\n      setMoviesByKeyword(moviesData.results);\n      setIsLoading(false);\n    } catch (error) {\n      toast.error('Something went wrong!!!');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n    fetchMoviesByKeyword();\n  }, [fetchMoviesByKeyword, query]);\n\n  return (\n    <>\n      <SearchForm />\n      {isLoading && <Loader />}\n\n      {moviesByKeyword.length > 0 && <MoviesList movies={moviesByKeyword} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","MovieItem","_templateObject3","MovieLink","Link","_templateObject4","MovieImage","_templateObject5","MovieRating","_templateObject6","MovieWrapper","_templateObject7","MovieTitle","_templateObject8","MovieYear","_templateObject9","MovieInfoWrapper","_templateObject10","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","name","title","release_date","poster_path","vote_average","year","Date","getFullYear","vote","toFixed","imageURL","concat","BASE_URL","_jsxs","to","state","from","src","alt","width","height","videoKey","allowFullScreen","frameBorder","allow","Title","Wrapper","props","background","Image","DescriptionContainer","UserScoreWrapper","UserScore","UserScoreValue","Overview","OverviewText","GenresWrapper","_templateObject11","GenresTitle","_templateObject12","Genres","_templateObject13","InfoContainer","_templateObject14","AdditionalInfo","_templateObject15","_templateObject16","ListItem","_templateObject17","StyledLink","_templateObject18","backdrop_path","overview","genres","firstOfficialTrailer","videos","length","genre","MovieVideo","type","official","key","_Fragment","GoArrowLeft","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","setVideos","_useState5","_useState6","isLoading","setIsLoading","BackLinkLocationRef","useRef","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","movieVideos","_context","prev","next","getMovies","sent","results","console","log","t0","toast","finish","stop","apply","arguments","defaulImage","filteredVideos","find","video","findFirstOfficialTrailer","BackLink","current","Loader","MovieInfo","_objectSpread","Suspense","fallback","Outlet","FormContainer","Form","Label","Input","Button","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","onSubmit","event","preventDefault","target","search","value","trim","toLowerCase","defaultValue","placeholder","moviesByKeyword","setMoviesByKeyword","fetchMoviesByKeyword","useCallback","moviesData","SearchForm","MoviesList","API_KEY","endpoint","params","response","_args","undefined","axios","api_key","abrupt","data","_x"],"sourceRoot":""}