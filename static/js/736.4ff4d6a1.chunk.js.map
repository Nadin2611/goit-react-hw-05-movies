{"version":3,"file":"static/js/736.4ff4d6a1.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin: 10px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\n\nexport const CastItem = styled.li`\n  margin-bottom: 10px;\n  border: 1px solid gainsboro;\n  border-radius: 10px;\n  padding-bottom: 20px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nexport const ProfileImage = styled.img`\n  width: 200px;\n  height: 300px;\n  margin-bottom: 8px;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const ActorName = styled.h2`\n  font-size: 18px;\n  margin-bottom: 4px;\n  text-align: center;\n`;\n\nexport const CharacterName = styled.p`\n  font-size: 14px;\n  color: gray;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport getMovies from 'service/api';\n\nimport {\n  ActorName,\n  CastItem,\n  CharacterName,\n  Container,\n  List,\n  ProfileImage,\n} from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setIsLoading(true);\n        setError('');\n        const actorInfo = await getMovies(`movie/${movieId}/credits`);\n\n        setCast(actorInfo.cast);\n      } catch (error) {\n        setError('Something went wrong!!!');\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      fetchCast();\n    }\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {error && <p>Error</p>}\n      {cast && (\n        <List>\n          {cast.map(actor => (\n            <CastItem key={actor.id}>\n              <ProfileImage\n                src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                alt=\"profile-foto\"\n              />\n\n              <ActorName>{actor.name}</ActorName>\n              <CharacterName>{actor.character}</CharacterName>\n            </CastItem>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '2b5715eb91948ab21d8a3671ab9cf18a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async (endpoint, params = {}) => {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return response.data;\n};\n\nexport default getMovies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","CastItem","_templateObject3","ProfileImage","_templateObject4","ActorName","_templateObject5","CharacterName","_templateObject6","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","actorInfo","_context","prev","next","getMovies","concat","sent","t0","toast","message","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","actor","src","profile_path","alt","name","character","id","API_KEY","BASE_URL","endpoint","params","response","_args","length","undefined","axios","_objectSpread","api_key","abrupt","data","_x"],"sourceRoot":""}